<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="570" onload="init(evt)" viewBox="0 0 1200 570" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="570" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">C:\Users\samue\miniconda3\envs\thesis\Scripts\py-spy.exe record -o profile.svg --pid 3704</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="559.00"> </text><svg id="frames" x="10" width="1180" total_samples="98709"><g><title>predict (stable_baselines3\common\policies.py:349) (222 samples, 0.22%)</title><rect x="0.0213%" y="260" width="0.2249%" height="15" fill="rgb(227,0,7)" fg:x="21" fg:w="222"/><text x="0.2713%" y="270.50"></text></g><g><title>_predict (policies.py:107) (171 samples, 0.17%)</title><rect x="0.0729%" y="276" width="0.1732%" height="15" fill="rgb(217,0,24)" fg:x="72" fg:w="171"/><text x="0.3229%" y="286.50"></text></g><g><title>decorate_context (torch\utils\_contextlib.py:115) (171 samples, 0.17%)</title><rect x="0.0729%" y="292" width="0.1732%" height="15" fill="rgb(221,193,54)" fg:x="72" fg:w="171"/><text x="0.3229%" y="302.50"></text></g><g><title>_sample_action (stable_baselines3\common\off_policy_algorithm.py:373) (229 samples, 0.23%)</title><rect x="0.0152%" y="228" width="0.2320%" height="15" fill="rgb(248,212,6)" fg:x="15" fg:w="229"/><text x="0.2652%" y="238.50"></text></g><g><title>predict (stable_baselines3\common\base_class.py:555) (229 samples, 0.23%)</title><rect x="0.0152%" y="244" width="0.2320%" height="15" fill="rgb(208,68,35)" fg:x="15" fg:w="229"/><text x="0.2652%" y="254.50"></text></g><g><title>collect_rollouts (stable_baselines3\common\off_policy_algorithm.py:541) (232 samples, 0.24%)</title><rect x="0.0152%" y="212" width="0.2350%" height="15" fill="rgb(232,128,0)" fg:x="15" fg:w="232"/><text x="0.2652%" y="222.50"></text></g><g><title>step (toy_goal_env.py:68) (115 samples, 0.12%)</title><rect x="0.3313%" y="388" width="0.1165%" height="15" fill="rgb(207,160,47)" fg:x="327" fg:w="115"/><text x="0.5813%" y="398.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:200) (108 samples, 0.11%)</title><rect x="0.3384%" y="404" width="0.1094%" height="15" fill="rgb(228,23,34)" fg:x="334" fg:w="108"/><text x="0.5884%" y="414.50"></text></g><g><title>clip (numpy\core\fromnumeric.py:2180) (104 samples, 0.11%)</title><rect x="0.3424%" y="420" width="0.1054%" height="15" fill="rgb(218,30,26)" fg:x="338" fg:w="104"/><text x="0.5924%" y="430.50"></text></g><g><title>_wrapfunc (numpy\core\fromnumeric.py:57) (99 samples, 0.10%)</title><rect x="0.3475%" y="436" width="0.1003%" height="15" fill="rgb(220,122,19)" fg:x="343" fg:w="99"/><text x="0.5975%" y="446.50"></text></g><g><title>step (non_stationary.py:55) (282 samples, 0.29%)</title><rect x="0.3009%" y="340" width="0.2857%" height="15" fill="rgb(250,228,42)" fg:x="297" fg:w="282"/><text x="0.5509%" y="350.50"></text></g><g><title>step (gymnasium\core.py:408) (280 samples, 0.28%)</title><rect x="0.3029%" y="356" width="0.2837%" height="15" fill="rgb(240,193,28)" fg:x="299" fg:w="280"/><text x="0.5529%" y="366.50"></text></g><g><title>step (toy_goal_env.py:172) (276 samples, 0.28%)</title><rect x="0.3070%" y="372" width="0.2796%" height="15" fill="rgb(216,20,37)" fg:x="303" fg:w="276"/><text x="0.5570%" y="382.50"></text></g><g><title>step (success.py:10) (322 samples, 0.33%)</title><rect x="0.2796%" y="308" width="0.3262%" height="15" fill="rgb(206,188,39)" fg:x="276" fg:w="322"/><text x="0.5296%" y="318.50"></text></g><g><title>step (gymnasium\core.py:408) (311 samples, 0.32%)</title><rect x="0.2908%" y="324" width="0.3151%" height="15" fill="rgb(217,207,13)" fg:x="287" fg:w="311"/><text x="0.5408%" y="334.50"></text></g><g><title>step (gymnasium\core.py:469) (397 samples, 0.40%)</title><rect x="0.2776%" y="292" width="0.4022%" height="15" fill="rgb(231,73,38)" fg:x="274" fg:w="397"/><text x="0.5276%" y="302.50"></text></g><g><title>step (gymnasium\wrappers\time_limit.py:57) (2,314 samples, 2.34%)</title><rect x="0.2756%" y="276" width="2.3443%" height="15" fill="rgb(225,20,46)" fg:x="272" fg:w="2314"/><text x="0.5256%" y="286.50">s..</text></g><g><title>step (gymnasium\core.py:470) (1,915 samples, 1.94%)</title><rect x="0.6798%" y="292" width="1.9400%" height="15" fill="rgb(210,31,41)" fg:x="671" fg:w="1915"/><text x="0.9298%" y="302.50">s..</text></g><g><title>observation (heatmap.py:38) (1,910 samples, 1.93%)</title><rect x="0.6848%" y="308" width="1.9350%" height="15" fill="rgb(221,200,47)" fg:x="676" fg:w="1910"/><text x="0.9348%" y="318.50">o..</text></g><g><title>add_to_heatmap (heatmap.py:35) (1,616 samples, 1.64%)</title><rect x="0.9827%" y="324" width="1.6371%" height="15" fill="rgb(226,26,5)" fg:x="970" fg:w="1616"/><text x="1.2327%" y="334.50"></text></g><g><title>step (wrappers\cemrl_wrapper.py:63) (2,330 samples, 2.36%)</title><rect x="0.2705%" y="260" width="2.3605%" height="15" fill="rgb(249,33,26)" fg:x="267" fg:w="2330"/><text x="0.5205%" y="270.50">st..</text></g><g><title>step_wait (stable_baselines3\common\vec_env\dummy_vec_env.py:58) (2,621 samples, 2.66%)</title><rect x="0.2502%" y="244" width="2.6553%" height="15" fill="rgb(235,183,28)" fg:x="247" fg:w="2621"/><text x="0.5002%" y="254.50">st..</text></g><g><title>step (wrappers\cemrl_wrapper.py:64) (271 samples, 0.27%)</title><rect x="2.6310%" y="260" width="0.2745%" height="15" fill="rgb(221,5,38)" fg:x="2597" fg:w="271"/><text x="2.8810%" y="270.50"></text></g><g><title>step (gymnasium\wrappers\time_limit.py:57) (196 samples, 0.20%)</title><rect x="2.9248%" y="292" width="0.1986%" height="15" fill="rgb(247,18,42)" fg:x="2887" fg:w="196"/><text x="3.1748%" y="302.50"></text></g><g><title>step (gymnasium\core.py:470) (116 samples, 0.12%)</title><rect x="3.0058%" y="308" width="0.1175%" height="15" fill="rgb(241,131,45)" fg:x="2967" fg:w="116"/><text x="3.2558%" y="318.50"></text></g><g><title>observation (heatmap.py:38) (116 samples, 0.12%)</title><rect x="3.0058%" y="324" width="0.1175%" height="15" fill="rgb(249,31,29)" fg:x="2967" fg:w="116"/><text x="3.2558%" y="334.50"></text></g><g><title>step (wrappers\cemrl_wrapper.py:63) (197 samples, 0.20%)</title><rect x="2.9248%" y="276" width="0.1996%" height="15" fill="rgb(225,111,53)" fg:x="2887" fg:w="197"/><text x="3.1748%" y="286.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\dummy_vec_env.py:70) (268 samples, 0.27%)</title><rect x="2.9096%" y="244" width="0.2715%" height="15" fill="rgb(238,160,17)" fg:x="2872" fg:w="268"/><text x="3.1596%" y="254.50"></text></g><g><title>reset (wrappers\cemrl_wrapper.py:80) (255 samples, 0.26%)</title><rect x="2.9227%" y="260" width="0.2583%" height="15" fill="rgb(214,148,48)" fg:x="2885" fg:w="255"/><text x="3.1727%" y="270.50"></text></g><g><title>collect_rollouts (stable_baselines3\common\off_policy_algorithm.py:544) (3,041 samples, 3.08%)</title><rect x="0.2502%" y="212" width="3.0808%" height="15" fill="rgb(232,36,49)" fg:x="247" fg:w="3041"/><text x="0.5002%" y="222.50">col..</text></g><g><title>step (stable_baselines3\common\vec_env\base_vec_env.py:180) (3,041 samples, 3.08%)</title><rect x="0.2502%" y="228" width="3.0808%" height="15" fill="rgb(209,103,24)" fg:x="247" fg:w="3041"/><text x="0.5002%" y="238.50">ste..</text></g><g><title>step_wait (stable_baselines3\common\vec_env\dummy_vec_env.py:72) (108 samples, 0.11%)</title><rect x="3.2216%" y="244" width="0.1094%" height="15" fill="rgb(229,88,8)" fg:x="3180" fg:w="108"/><text x="3.4716%" y="254.50"></text></g><g><title>deepcopy (copy.py:146) (107 samples, 0.11%)</title><rect x="3.2226%" y="260" width="0.1084%" height="15" fill="rgb(213,181,19)" fg:x="3181" fg:w="107"/><text x="3.4726%" y="270.50"></text></g><g><title>_deepcopy_list (copy.py:206) (105 samples, 0.11%)</title><rect x="3.2246%" y="276" width="0.1064%" height="15" fill="rgb(254,191,54)" fg:x="3183" fg:w="105"/><text x="3.4746%" y="286.50"></text></g><g><title>collect_rollouts (stable_baselines3\common\off_policy_algorithm.py:533) (3,336 samples, 3.38%)</title><rect x="0.0091%" y="100" width="3.3796%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="3336"/><text x="0.2591%" y="110.50">col..</text></g><g><title>on_rollout_start (stable_baselines3\common\callbacks.py:80) (3,336 samples, 3.38%)</title><rect x="0.0091%" y="116" width="3.3796%" height="15" fill="rgb(233,36,39)" fg:x="9" fg:w="3336"/><text x="0.2591%" y="126.50">on_..</text></g><g><title>_on_rollout_start (stable_baselines3\common\callbacks.py:202) (3,336 samples, 3.38%)</title><rect x="0.0091%" y="132" width="3.3796%" height="15" fill="rgb(226,3,54)" fg:x="9" fg:w="3336"/><text x="0.2591%" y="142.50">_on..</text></g><g><title>on_rollout_start (stable_baselines3\common\callbacks.py:80) (3,336 samples, 3.38%)</title><rect x="0.0091%" y="148" width="3.3796%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="3336"/><text x="0.2591%" y="158.50">on_..</text></g><g><title>_on_rollout_start (stable_baselines3\common\callbacks.py:202) (3,336 samples, 3.38%)</title><rect x="0.0091%" y="164" width="3.3796%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="3336"/><text x="0.2591%" y="174.50">_on..</text></g><g><title>on_rollout_start (stable_baselines3\common\callbacks.py:80) (3,336 samples, 3.38%)</title><rect x="0.0091%" y="180" width="3.3796%" height="15" fill="rgb(232,182,51)" fg:x="9" fg:w="3336"/><text x="0.2591%" y="190.50">on_..</text></g><g><title>_on_rollout_start (callbacks\exploration_callback.py:94) (3,336 samples, 3.38%)</title><rect x="0.0091%" y="196" width="3.3796%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="3336"/><text x="0.2591%" y="206.50">_on..</text></g><g><title>step (toy_goal_env.py:68) (117 samples, 0.12%)</title><rect x="3.5671%" y="276" width="0.1185%" height="15" fill="rgb(208,69,12)" fg:x="3521" fg:w="117"/><text x="3.8171%" y="286.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:200) (103 samples, 0.10%)</title><rect x="3.5812%" y="292" width="0.1043%" height="15" fill="rgb(235,93,37)" fg:x="3535" fg:w="103"/><text x="3.8312%" y="302.50"></text></g><g><title>clip (numpy\core\fromnumeric.py:2180) (101 samples, 0.10%)</title><rect x="3.5833%" y="308" width="0.1023%" height="15" fill="rgb(213,116,39)" fg:x="3537" fg:w="101"/><text x="3.8333%" y="318.50"></text></g><g><title>step (toy_goal_env.py:74) (107 samples, 0.11%)</title><rect x="3.7109%" y="276" width="0.1084%" height="15" fill="rgb(222,207,29)" fg:x="3663" fg:w="107"/><text x="3.9609%" y="286.50"></text></g><g><title>step (non_stationary.py:55) (308 samples, 0.31%)</title><rect x="3.5286%" y="228" width="0.3120%" height="15" fill="rgb(206,96,30)" fg:x="3483" fg:w="308"/><text x="3.7786%" y="238.50"></text></g><g><title>step (gymnasium\core.py:408) (305 samples, 0.31%)</title><rect x="3.5316%" y="244" width="0.3090%" height="15" fill="rgb(218,138,4)" fg:x="3486" fg:w="305"/><text x="3.7816%" y="254.50"></text></g><g><title>step (toy_goal_env.py:172) (298 samples, 0.30%)</title><rect x="3.5387%" y="260" width="0.3019%" height="15" fill="rgb(250,191,14)" fg:x="3493" fg:w="298"/><text x="3.7887%" y="270.50"></text></g><g><title>step (success.py:10) (355 samples, 0.36%)</title><rect x="3.5144%" y="196" width="0.3596%" height="15" fill="rgb(239,60,40)" fg:x="3469" fg:w="355"/><text x="3.7644%" y="206.50"></text></g><g><title>step (gymnasium\core.py:408) (347 samples, 0.35%)</title><rect x="3.5225%" y="212" width="0.3515%" height="15" fill="rgb(206,27,48)" fg:x="3477" fg:w="347"/><text x="3.7725%" y="222.50"></text></g><g><title>step (gymnasium\core.py:469) (412 samples, 0.42%)</title><rect x="3.5083%" y="180" width="0.4174%" height="15" fill="rgb(225,35,8)" fg:x="3463" fg:w="412"/><text x="3.7583%" y="190.50"></text></g><g><title>step (gymnasium\wrappers\time_limit.py:57) (2,098 samples, 2.13%)</title><rect x="3.5063%" y="164" width="2.1254%" height="15" fill="rgb(250,213,24)" fg:x="3461" fg:w="2098"/><text x="3.7563%" y="174.50">s..</text></g><g><title>step (gymnasium\core.py:470) (1,684 samples, 1.71%)</title><rect x="3.9257%" y="180" width="1.7060%" height="15" fill="rgb(247,123,22)" fg:x="3875" fg:w="1684"/><text x="4.1757%" y="190.50"></text></g><g><title>observation (heatmap.py:38) (1,681 samples, 1.70%)</title><rect x="3.9287%" y="196" width="1.7030%" height="15" fill="rgb(231,138,38)" fg:x="3878" fg:w="1681"/><text x="4.1787%" y="206.50"></text></g><g><title>add_to_heatmap (heatmap.py:35) (1,366 samples, 1.38%)</title><rect x="4.2478%" y="212" width="1.3839%" height="15" fill="rgb(231,145,46)" fg:x="4193" fg:w="1366"/><text x="4.4978%" y="222.50"></text></g><g><title>step (wrappers\cemrl_wrapper.py:63) (2,118 samples, 2.15%)</title><rect x="3.5002%" y="148" width="2.1457%" height="15" fill="rgb(251,118,11)" fg:x="3455" fg:w="2118"/><text x="3.7502%" y="158.50">s..</text></g><g><title>step_wait (stable_baselines3\common\vec_env\dummy_vec_env.py:58) (2,389 samples, 2.42%)</title><rect x="3.4799%" y="132" width="2.4202%" height="15" fill="rgb(217,147,25)" fg:x="3435" fg:w="2389"/><text x="3.7299%" y="142.50">st..</text></g><g><title>step (wrappers\cemrl_wrapper.py:64) (251 samples, 0.25%)</title><rect x="5.6459%" y="148" width="0.2543%" height="15" fill="rgb(247,81,37)" fg:x="5573" fg:w="251"/><text x="5.8959%" y="158.50"></text></g><g><title>step (gymnasium\wrappers\time_limit.py:57) (216 samples, 0.22%)</title><rect x="5.9113%" y="180" width="0.2188%" height="15" fill="rgb(209,12,38)" fg:x="5835" fg:w="216"/><text x="6.1613%" y="190.50"></text></g><g><title>step (gymnasium\core.py:470) (132 samples, 0.13%)</title><rect x="5.9964%" y="196" width="0.1337%" height="15" fill="rgb(227,1,9)" fg:x="5919" fg:w="132"/><text x="6.2464%" y="206.50"></text></g><g><title>observation (heatmap.py:38) (132 samples, 0.13%)</title><rect x="5.9964%" y="212" width="0.1337%" height="15" fill="rgb(248,47,43)" fg:x="5919" fg:w="132"/><text x="6.2464%" y="222.50"></text></g><g><title>step (wrappers\cemrl_wrapper.py:63) (218 samples, 0.22%)</title><rect x="5.9113%" y="164" width="0.2209%" height="15" fill="rgb(221,10,30)" fg:x="5835" fg:w="218"/><text x="6.1613%" y="174.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\dummy_vec_env.py:70) (280 samples, 0.28%)</title><rect x="5.9012%" y="132" width="0.2837%" height="15" fill="rgb(210,229,1)" fg:x="5825" fg:w="280"/><text x="6.1512%" y="142.50"></text></g><g><title>reset (wrappers\cemrl_wrapper.py:80) (270 samples, 0.27%)</title><rect x="5.9113%" y="148" width="0.2735%" height="15" fill="rgb(222,148,37)" fg:x="5835" fg:w="270"/><text x="6.1613%" y="158.50"></text></g><g><title>deepcopy (copy.py:146) (135 samples, 0.14%)</title><rect x="6.2274%" y="180" width="0.1368%" height="15" fill="rgb(234,67,33)" fg:x="6147" fg:w="135"/><text x="6.4774%" y="190.50"></text></g><g><title>_deepcopy_dict (copy.py:231) (120 samples, 0.12%)</title><rect x="6.2426%" y="196" width="0.1216%" height="15" fill="rgb(247,98,35)" fg:x="6162" fg:w="120"/><text x="6.4926%" y="206.50"></text></g><g><title>collect_rollouts (stable_baselines3\common\off_policy_algorithm.py:544) (2,856 samples, 2.89%)</title><rect x="3.4779%" y="100" width="2.8934%" height="15" fill="rgb(247,138,52)" fg:x="3433" fg:w="2856"/><text x="3.7279%" y="110.50">co..</text></g><g><title>step (stable_baselines3\common\vec_env\base_vec_env.py:180) (2,856 samples, 2.89%)</title><rect x="3.4779%" y="116" width="2.8934%" height="15" fill="rgb(213,79,30)" fg:x="3433" fg:w="2856"/><text x="3.7279%" y="126.50">st..</text></g><g><title>step_wait (stable_baselines3\common\vec_env\dummy_vec_env.py:72) (148 samples, 0.15%)</title><rect x="6.2213%" y="132" width="0.1499%" height="15" fill="rgb(246,177,23)" fg:x="6141" fg:w="148"/><text x="6.4713%" y="142.50"></text></g><g><title>deepcopy (copy.py:146) (146 samples, 0.15%)</title><rect x="6.2233%" y="148" width="0.1479%" height="15" fill="rgb(230,62,27)" fg:x="6143" fg:w="146"/><text x="6.4733%" y="158.50"></text></g><g><title>_deepcopy_list (copy.py:206) (145 samples, 0.15%)</title><rect x="6.2244%" y="164" width="0.1469%" height="15" fill="rgb(216,154,8)" fg:x="6144" fg:w="145"/><text x="6.4744%" y="174.50"></text></g><g><title>_prepare_video (torch\utils\tensorboard\_utils.py:49) (2,465 samples, 2.50%)</title><rect x="6.3773%" y="276" width="2.4972%" height="15" fill="rgb(244,35,45)" fg:x="6295" fg:w="2465"/><text x="6.6273%" y="286.50">_p..</text></g><g><title>video (torch\utils\tensorboard\summary.py:510) (2,466 samples, 2.50%)</title><rect x="6.3773%" y="260" width="2.4983%" height="15" fill="rgb(251,115,12)" fg:x="6295" fg:w="2466"/><text x="6.6273%" y="270.50">vi..</text></g><g><title>video (torch\utils\tensorboard\summary.py:513) (956 samples, 0.97%)</title><rect x="8.8756%" y="260" width="0.9685%" height="15" fill="rgb(240,54,50)" fg:x="8761" fg:w="956"/><text x="9.1256%" y="270.50"></text></g><g><title>video (torch\utils\tensorboard\summary.py:514) (2,714 samples, 2.75%)</title><rect x="9.8441%" y="260" width="2.7495%" height="15" fill="rgb(233,84,52)" fg:x="9717" fg:w="2714"/><text x="10.0941%" y="270.50">vi..</text></g><g><title>_clip (numpy\core\_methods.py:161) (1,568 samples, 1.59%)</title><rect x="11.0051%" y="276" width="1.5885%" height="15" fill="rgb(207,117,47)" fg:x="10863" fg:w="1568"/><text x="11.2551%" y="286.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy\core\_methods.py:115) (1,568 samples, 1.59%)</title><rect x="11.0051%" y="292" width="1.5885%" height="15" fill="rgb(249,43,39)" fg:x="10863" fg:w="1568"/><text x="11.2551%" y="302.50"></text></g><g><title>convert (PIL\Image.py:1027) (2,888 samples, 2.93%)</title><rect x="12.6301%" y="516" width="2.9258%" height="15" fill="rgb(209,38,44)" fg:x="12467" fg:w="2888"/><text x="12.8801%" y="526.50">co..</text></g><g><title>_normalize_mode (PIL\GifImagePlugin.py:485) (2,893 samples, 2.93%)</title><rect x="12.6301%" y="500" width="2.9308%" height="15" fill="rgb(236,212,23)" fg:x="12467" fg:w="2893"/><text x="12.8801%" y="510.50">_n..</text></g><g><title>_write_multiple_frames (PIL\GifImagePlugin.py:579) (2,986 samples, 3.03%)</title><rect x="12.6118%" y="484" width="3.0251%" height="15" fill="rgb(242,79,21)" fg:x="12449" fg:w="2986"/><text x="12.8618%" y="494.50">_wr..</text></g><g><title>_flush_writer (imageio\plugins\pillow.py:428) (3,490 samples, 3.54%)</title><rect x="12.6068%" y="420" width="3.5356%" height="15" fill="rgb(211,96,35)" fg:x="12444" fg:w="3490"/><text x="12.8568%" y="430.50">_fl..</text></g><g><title>save (PIL\Image.py:2354) (3,490 samples, 3.54%)</title><rect x="12.6068%" y="436" width="3.5356%" height="15" fill="rgb(253,215,40)" fg:x="12444" fg:w="3490"/><text x="12.8568%" y="446.50">sav..</text></g><g><title>_save_all (PIL\GifImagePlugin.py:653) (3,490 samples, 3.54%)</title><rect x="12.6068%" y="452" width="3.5356%" height="15" fill="rgb(211,81,21)" fg:x="12444" fg:w="3490"/><text x="12.8568%" y="462.50">_sa..</text></g><g><title>_save (PIL\GifImagePlugin.py:664) (3,490 samples, 3.54%)</title><rect x="12.6068%" y="468" width="3.5356%" height="15" fill="rgb(208,190,38)" fg:x="12444" fg:w="3490"/><text x="12.8568%" y="478.50">_sa..</text></g><g><title>_write_multiple_frames (PIL\GifImagePlugin.py:643) (327 samples, 0.33%)</title><rect x="15.8111%" y="484" width="0.3313%" height="15" fill="rgb(235,213,38)" fg:x="15607" fg:w="327"/><text x="16.0611%" y="494.50"></text></g><g><title>_write_frame_data (PIL\GifImagePlugin.py:975) (326 samples, 0.33%)</title><rect x="15.8121%" y="500" width="0.3303%" height="15" fill="rgb(237,122,38)" fg:x="15608" fg:w="326"/><text x="16.0621%" y="510.50"></text></g><g><title>_save (PIL\ImageFile.py:505) (322 samples, 0.33%)</title><rect x="15.8162%" y="516" width="0.3262%" height="15" fill="rgb(244,218,35)" fg:x="15612" fg:w="322"/><text x="16.0662%" y="526.50"></text></g><g><title>_encode_tile (PIL\ImageFile.py:532) (321 samples, 0.33%)</title><rect x="15.8172%" y="532" width="0.3252%" height="15" fill="rgb(240,68,47)" fg:x="15613" fg:w="321"/><text x="16.0672%" y="542.50"></text></g><g><title>close (imageio\plugins\pillow.py:120) (3,503 samples, 3.55%)</title><rect x="12.6068%" y="404" width="3.5488%" height="15" fill="rgb(210,16,53)" fg:x="12444" fg:w="3503"/><text x="12.8568%" y="414.50">clos..</text></g><g><title>__del__ (imageio\v2.py:189) (3,504 samples, 3.55%)</title><rect x="12.6068%" y="372" width="3.5498%" height="15" fill="rgb(235,124,12)" fg:x="12444" fg:w="3504"/><text x="12.8568%" y="382.50">__de..</text></g><g><title>close (imageio\v2.py:179) (3,504 samples, 3.55%)</title><rect x="12.6068%" y="388" width="3.5498%" height="15" fill="rgb(224,169,11)" fg:x="12444" fg:w="3504"/><text x="12.8568%" y="398.50">clos..</text></g><g><title>make_video (torch\utils\tensorboard\summary.py:542) (3,653 samples, 3.70%)</title><rect x="12.6068%" y="276" width="3.7008%" height="15" fill="rgb(250,166,2)" fg:x="12444" fg:w="3653"/><text x="12.8568%" y="286.50">make..</text></g><g><title>write_gif (&lt;decorator-gen-74&gt;:2) (3,653 samples, 3.70%)</title><rect x="12.6068%" y="292" width="3.7008%" height="15" fill="rgb(242,216,29)" fg:x="12444" fg:w="3653"/><text x="12.8568%" y="302.50">writ..</text></g><g><title>requires_duration (moviepy\decorators.py:54) (3,653 samples, 3.70%)</title><rect x="12.6068%" y="308" width="3.7008%" height="15" fill="rgb(230,116,27)" fg:x="12444" fg:w="3653"/><text x="12.8568%" y="318.50">requ..</text></g><g><title>write_gif (&lt;decorator-gen-73&gt;:2) (3,653 samples, 3.70%)</title><rect x="12.6068%" y="324" width="3.7008%" height="15" fill="rgb(228,99,48)" fg:x="12444" fg:w="3653"/><text x="12.8568%" y="334.50">writ..</text></g><g><title>convert_masks_to_RGB (moviepy\decorators.py:22) (3,653 samples, 3.70%)</title><rect x="12.6068%" y="340" width="3.7008%" height="15" fill="rgb(253,11,6)" fg:x="12444" fg:w="3653"/><text x="12.8568%" y="350.50">conv..</text></g><g><title>write_gif (moviepy\video\VideoClip.py:432) (3,653 samples, 3.70%)</title><rect x="12.6068%" y="356" width="3.7008%" height="15" fill="rgb(247,143,39)" fg:x="12444" fg:w="3653"/><text x="12.8568%" y="366.50">writ..</text></g><g><title>write_gif_with_image_io (moviepy\video\io\gif_writers.py:285) (130 samples, 0.13%)</title><rect x="16.1758%" y="372" width="0.1317%" height="15" fill="rgb(236,97,10)" fg:x="15967" fg:w="130"/><text x="16.4258%" y="382.50"></text></g><g><title>append_data (imageio\v2.py:215) (130 samples, 0.13%)</title><rect x="16.1758%" y="388" width="0.1317%" height="15" fill="rgb(233,208,19)" fg:x="15967" fg:w="130"/><text x="16.4258%" y="398.50"></text></g><g><title>write (imageio\plugins\pillow.py:387) (130 samples, 0.13%)</title><rect x="16.1758%" y="404" width="0.1317%" height="15" fill="rgb(216,164,2)" fg:x="15967" fg:w="130"/><text x="16.4258%" y="414.50"></text></g><g><title>fromarray (PIL\Image.py:3013) (129 samples, 0.13%)</title><rect x="16.1768%" y="420" width="0.1307%" height="15" fill="rgb(220,129,5)" fg:x="15968" fg:w="129"/><text x="16.4268%" y="430.50"></text></g><g><title>frombuffer (PIL\Image.py:2940) (129 samples, 0.13%)</title><rect x="16.1768%" y="436" width="0.1307%" height="15" fill="rgb(242,17,10)" fg:x="15968" fg:w="129"/><text x="16.4268%" y="446.50"></text></g><g><title>video (torch\utils\tensorboard\summary.py:515) (3,667 samples, 3.71%)</title><rect x="12.5936%" y="260" width="3.7150%" height="15" fill="rgb(242,107,0)" fg:x="12431" fg:w="3667"/><text x="12.8436%" y="270.50">vide..</text></g><g><title>write (stable_baselines3\common\logger.py:417) (9,806 samples, 9.93%)</title><rect x="6.3763%" y="228" width="9.9343%" height="15" fill="rgb(251,28,31)" fg:x="6294" fg:w="9806"/><text x="6.6263%" y="238.50">write (stable_..</text></g><g><title>add_video (torch\utils\tensorboard\writer.py:773) (9,805 samples, 9.93%)</title><rect x="6.3773%" y="244" width="9.9332%" height="15" fill="rgb(233,223,10)" fg:x="6295" fg:w="9805"/><text x="6.6273%" y="254.50">add_video (tor..</text></g><g><title>dump (stable_baselines3\common\logger.py:536) (9,827 samples, 9.96%)</title><rect x="6.3763%" y="212" width="9.9555%" height="15" fill="rgb(215,21,27)" fg:x="6294" fg:w="9827"/><text x="6.6263%" y="222.50">dump (stable_b..</text></g><g><title>_on_step (callbacks\plan2explore_eval_callback.py:128) (9,832 samples, 9.96%)</title><rect x="6.3763%" y="196" width="9.9606%" height="15" fill="rgb(232,23,21)" fg:x="6294" fg:w="9832"/><text x="6.6263%" y="206.50">_on_step (call..</text></g><g><title>__init__ (torch\distributions\distribution.py:61) (142 samples, 0.14%)</title><rect x="16.6712%" y="420" width="0.1439%" height="15" fill="rgb(244,5,23)" fg:x="16456" fg:w="142"/><text x="16.9212%" y="430.50"></text></g><g><title>encode (networks.py:46) (159 samples, 0.16%)</title><rect x="16.6550%" y="388" width="0.1611%" height="15" fill="rgb(226,81,46)" fg:x="16440" fg:w="159"/><text x="16.9050%" y="398.50"></text></g><g><title>__init__ (torch\distributions\categorical.py:66) (156 samples, 0.16%)</title><rect x="16.6581%" y="404" width="0.1580%" height="15" fill="rgb(247,70,30)" fg:x="16443" fg:w="156"/><text x="16.9081%" y="414.50"></text></g><g><title>forward (networks.py:30) (316 samples, 0.32%)</title><rect x="16.5345%" y="356" width="0.3201%" height="15" fill="rgb(212,68,19)" fg:x="16321" fg:w="316"/><text x="16.7845%" y="366.50"></text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (316 samples, 0.32%)</title><rect x="16.5345%" y="372" width="0.3201%" height="15" fill="rgb(240,187,13)" fg:x="16321" fg:w="316"/><text x="16.7845%" y="382.50"></text></g><g><title>_predict (policies.py:68) (338 samples, 0.34%)</title><rect x="16.5324%" y="308" width="0.3424%" height="15" fill="rgb(223,113,26)" fg:x="16319" fg:w="338"/><text x="16.7824%" y="318.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (337 samples, 0.34%)</title><rect x="16.5334%" y="324" width="0.3414%" height="15" fill="rgb(206,192,2)" fg:x="16320" fg:w="337"/><text x="16.7834%" y="334.50"></text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (336 samples, 0.34%)</title><rect x="16.5345%" y="340" width="0.3404%" height="15" fill="rgb(241,108,4)" fg:x="16321" fg:w="336"/><text x="16.7845%" y="350.50"></text></g><g><title>predict (stable_baselines3\common\policies.py:349) (408 samples, 0.41%)</title><rect x="16.5304%" y="276" width="0.4133%" height="15" fill="rgb(247,173,49)" fg:x="16317" fg:w="408"/><text x="16.7804%" y="286.50"></text></g><g><title>decorate_context (torch\utils\_contextlib.py:115) (407 samples, 0.41%)</title><rect x="16.5314%" y="292" width="0.4123%" height="15" fill="rgb(224,114,35)" fg:x="16318" fg:w="407"/><text x="16.7814%" y="302.50"></text></g><g><title>evaluate_policy (stable_baselines3\common\evaluation.py:88) (534 samples, 0.54%)</title><rect x="16.4119%" y="244" width="0.5410%" height="15" fill="rgb(245,159,27)" fg:x="16200" fg:w="534"/><text x="16.6619%" y="254.50"></text></g><g><title>predict (stable_baselines3\common\base_class.py:555) (534 samples, 0.54%)</title><rect x="16.4119%" y="260" width="0.5410%" height="15" fill="rgb(245,172,44)" fg:x="16200" fg:w="534"/><text x="16.6619%" y="270.50"></text></g><g><title>step (success.py:10) (100 samples, 0.10%)</title><rect x="16.9610%" y="356" width="0.1013%" height="15" fill="rgb(236,23,11)" fg:x="16742" fg:w="100"/><text x="17.2110%" y="366.50"></text></g><g><title>step (gymnasium\core.py:469) (115 samples, 0.12%)</title><rect x="16.9589%" y="340" width="0.1165%" height="15" fill="rgb(205,117,38)" fg:x="16740" fg:w="115"/><text x="17.2089%" y="350.50"></text></g><g><title>step (gymnasium\wrappers\time_limit.py:57) (534 samples, 0.54%)</title><rect x="16.9589%" y="324" width="0.5410%" height="15" fill="rgb(237,72,25)" fg:x="16740" fg:w="534"/><text x="17.2089%" y="334.50"></text></g><g><title>step (gymnasium\core.py:470) (419 samples, 0.42%)</title><rect x="17.0754%" y="340" width="0.4245%" height="15" fill="rgb(244,70,9)" fg:x="16855" fg:w="419"/><text x="17.3254%" y="350.50"></text></g><g><title>observation (heatmap.py:38) (419 samples, 0.42%)</title><rect x="17.0754%" y="356" width="0.4245%" height="15" fill="rgb(217,125,39)" fg:x="16855" fg:w="419"/><text x="17.3254%" y="366.50"></text></g><g><title>add_to_heatmap (heatmap.py:35) (355 samples, 0.36%)</title><rect x="17.1403%" y="372" width="0.3596%" height="15" fill="rgb(235,36,10)" fg:x="16919" fg:w="355"/><text x="17.3903%" y="382.50"></text></g><g><title>step (wrappers\cemrl_wrapper.py:63) (536 samples, 0.54%)</title><rect x="16.9589%" y="308" width="0.5430%" height="15" fill="rgb(251,123,47)" fg:x="16740" fg:w="536"/><text x="17.2089%" y="318.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\dummy_vec_env.py:58) (621 samples, 0.63%)</title><rect x="16.9549%" y="292" width="0.6291%" height="15" fill="rgb(221,13,13)" fg:x="16736" fg:w="621"/><text x="17.2049%" y="302.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\vec_video_recorder.py:88) (695 samples, 0.70%)</title><rect x="16.9549%" y="276" width="0.7041%" height="15" fill="rgb(238,131,9)" fg:x="16736" fg:w="695"/><text x="17.2049%" y="286.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\vec_video_recorder.py:92) (258 samples, 0.26%)</title><rect x="17.6590%" y="276" width="0.2614%" height="15" fill="rgb(211,50,8)" fg:x="17431" fg:w="258"/><text x="17.9090%" y="286.50"></text></g><g><title>capture_frame (gymnasium\wrappers\monitoring\video_recorder.py:114) (258 samples, 0.26%)</title><rect x="17.6590%" y="292" width="0.2614%" height="15" fill="rgb(245,182,24)" fg:x="17431" fg:w="258"/><text x="17.9090%" y="302.50"></text></g><g><title>render (stable_baselines3\common\vec_env\dummy_vec_env.py:101) (258 samples, 0.26%)</title><rect x="17.6590%" y="308" width="0.2614%" height="15" fill="rgb(242,14,37)" fg:x="17431" fg:w="258"/><text x="17.9090%" y="318.50"></text></g><g><title>render (stable_baselines3\common\vec_env\base_vec_env.py:231) (191 samples, 0.19%)</title><rect x="17.7269%" y="324" width="0.1935%" height="15" fill="rgb(246,228,12)" fg:x="17498" fg:w="191"/><text x="17.9769%" y="334.50"></text></g><g><title>ffmpeg_write_video (moviepy\video\io\ffmpeg_writer.py:228) (145 samples, 0.15%)</title><rect x="17.9852%" y="436" width="0.1469%" height="15" fill="rgb(213,55,15)" fg:x="17753" fg:w="145"/><text x="18.2352%" y="446.50"></text></g><g><title>write_frame (moviepy\video\io\ffmpeg_writer.py:136) (145 samples, 0.15%)</title><rect x="17.9852%" y="452" width="0.1469%" height="15" fill="rgb(209,9,3)" fg:x="17753" fg:w="145"/><text x="18.2352%" y="462.50"></text></g><g><title>write_videofile (moviepy\video\VideoClip.py:300) (211 samples, 0.21%)</title><rect x="17.9204%" y="420" width="0.2138%" height="15" fill="rgb(230,59,30)" fg:x="17689" fg:w="211"/><text x="18.1704%" y="430.50"></text></g><g><title>evaluate_policy (stable_baselines3\common\evaluation.py:94) (1,167 samples, 1.18%)</title><rect x="16.9529%" y="244" width="1.1823%" height="15" fill="rgb(209,121,21)" fg:x="16734" fg:w="1167"/><text x="17.2029%" y="254.50"></text></g><g><title>step (stable_baselines3\common\vec_env\base_vec_env.py:180) (1,165 samples, 1.18%)</title><rect x="16.9549%" y="260" width="1.1802%" height="15" fill="rgb(220,109,13)" fg:x="16736" fg:w="1165"/><text x="17.2049%" y="270.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\vec_video_recorder.py:96) (212 samples, 0.21%)</title><rect x="17.9204%" y="276" width="0.2148%" height="15" fill="rgb(232,18,1)" fg:x="17689" fg:w="212"/><text x="18.1704%" y="286.50"></text></g><g><title>close_video_recorder (stable_baselines3\common\vec_env\vec_video_recorder.py:104) (212 samples, 0.21%)</title><rect x="17.9204%" y="292" width="0.2148%" height="15" fill="rgb(215,41,42)" fg:x="17689" fg:w="212"/><text x="18.1704%" y="302.50"></text></g><g><title>close (gymnasium\wrappers\monitoring\video_recorder.py:164) (212 samples, 0.21%)</title><rect x="17.9204%" y="308" width="0.2148%" height="15" fill="rgb(224,123,36)" fg:x="17689" fg:w="212"/><text x="18.1704%" y="318.50"></text></g><g><title>write_videofile (&lt;decorator-gen-69&gt;:2) (212 samples, 0.21%)</title><rect x="17.9204%" y="324" width="0.2148%" height="15" fill="rgb(240,125,3)" fg:x="17689" fg:w="212"/><text x="18.1704%" y="334.50"></text></g><g><title>requires_duration (moviepy\decorators.py:54) (212 samples, 0.21%)</title><rect x="17.9204%" y="340" width="0.2148%" height="15" fill="rgb(205,98,50)" fg:x="17689" fg:w="212"/><text x="18.1704%" y="350.50"></text></g><g><title>write_videofile (&lt;decorator-gen-68&gt;:2) (212 samples, 0.21%)</title><rect x="17.9204%" y="356" width="0.2148%" height="15" fill="rgb(205,185,37)" fg:x="17689" fg:w="212"/><text x="18.1704%" y="366.50"></text></g><g><title>use_clip_fps_by_default (moviepy\decorators.py:135) (212 samples, 0.21%)</title><rect x="17.9204%" y="372" width="0.2148%" height="15" fill="rgb(238,207,15)" fg:x="17689" fg:w="212"/><text x="18.1704%" y="382.50"></text></g><g><title>write_videofile (&lt;decorator-gen-67&gt;:2) (212 samples, 0.21%)</title><rect x="17.9204%" y="388" width="0.2148%" height="15" fill="rgb(213,199,42)" fg:x="17689" fg:w="212"/><text x="18.1704%" y="398.50"></text></g><g><title>convert_masks_to_RGB (moviepy\decorators.py:22) (212 samples, 0.21%)</title><rect x="17.9204%" y="404" width="0.2148%" height="15" fill="rgb(235,201,11)" fg:x="17689" fg:w="212"/><text x="18.1704%" y="414.50"></text></g><g><title>_on_step (callbacks\record_video.py:30) (1,772 samples, 1.80%)</title><rect x="16.3430%" y="228" width="1.7952%" height="15" fill="rgb(207,46,11)" fg:x="16132" fg:w="1772"/><text x="16.5930%" y="238.50">_..</text></g><g><title>_on_step (callbacks\plan2explore_eval_callback.py:139) (1,872 samples, 1.90%)</title><rect x="16.3430%" y="196" width="1.8965%" height="15" fill="rgb(241,35,35)" fg:x="16132" fg:w="1872"/><text x="16.5930%" y="206.50">_..</text></g><g><title>on_step (stable_baselines3\common\callbacks.py:104) (1,872 samples, 1.90%)</title><rect x="16.3430%" y="212" width="1.8965%" height="15" fill="rgb(243,32,47)" fg:x="16132" fg:w="1872"/><text x="16.5930%" y="222.50">o..</text></g><g><title>_on_step (callbacks\record_video.py:40) (100 samples, 0.10%)</title><rect x="18.1382%" y="228" width="0.1013%" height="15" fill="rgb(247,202,23)" fg:x="17904" fg:w="100"/><text x="18.3882%" y="238.50"></text></g><g><title>forward (networks.py:30) (264 samples, 0.27%)</title><rect x="18.3843%" y="308" width="0.2675%" height="15" fill="rgb(219,102,11)" fg:x="18147" fg:w="264"/><text x="18.6343%" y="318.50"></text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (263 samples, 0.27%)</title><rect x="18.3854%" y="324" width="0.2664%" height="15" fill="rgb(243,110,44)" fg:x="18148" fg:w="263"/><text x="18.6354%" y="334.50"></text></g><g><title>_predict (policies.py:105) (295 samples, 0.30%)</title><rect x="18.3843%" y="260" width="0.2989%" height="15" fill="rgb(222,74,54)" fg:x="18147" fg:w="295"/><text x="18.6343%" y="270.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (295 samples, 0.30%)</title><rect x="18.3843%" y="276" width="0.2989%" height="15" fill="rgb(216,99,12)" fg:x="18147" fg:w="295"/><text x="18.6343%" y="286.50"></text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (295 samples, 0.30%)</title><rect x="18.3843%" y="292" width="0.2989%" height="15" fill="rgb(226,22,26)" fg:x="18147" fg:w="295"/><text x="18.6343%" y="302.50"></text></g><g><title>sample (gymnasium\spaces\box.py:218) (174 samples, 0.18%)</title><rect x="18.8382%" y="324" width="0.1763%" height="15" fill="rgb(217,163,10)" fg:x="18595" fg:w="174"/><text x="19.0882%" y="334.50"></text></g><g><title>&lt;listcomp&gt; (policies.py:64) (348 samples, 0.35%)</title><rect x="18.6873%" y="308" width="0.3526%" height="15" fill="rgb(213,25,53)" fg:x="18446" fg:w="348"/><text x="18.9373%" y="318.50"></text></g><g><title>_predict (policies.py:64) (356 samples, 0.36%)</title><rect x="18.6862%" y="292" width="0.3607%" height="15" fill="rgb(252,105,26)" fg:x="18445" fg:w="356"/><text x="18.9362%" y="302.50"></text></g><g><title>forward (torch\nn\modules\activation.py:103) (169 samples, 0.17%)</title><rect x="19.6791%" y="452" width="0.1712%" height="15" fill="rgb(220,39,43)" fg:x="19425" fg:w="169"/><text x="19.9291%" y="462.50"></text></g><g><title>relu (torch\nn\functional.py:1457) (165 samples, 0.17%)</title><rect x="19.6831%" y="468" width="0.1672%" height="15" fill="rgb(229,68,48)" fg:x="19429" fg:w="165"/><text x="19.9331%" y="478.50"></text></g><g><title>forward (networks.py:91) (1,683 samples, 1.71%)</title><rect x="19.2617%" y="388" width="1.7050%" height="15" fill="rgb(252,8,32)" fg:x="19013" fg:w="1683"/><text x="19.5117%" y="398.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (1,398 samples, 1.42%)</title><rect x="19.5504%" y="404" width="1.4163%" height="15" fill="rgb(223,20,43)" fg:x="19298" fg:w="1398"/><text x="19.8004%" y="414.50"></text></g><g><title>forward (torch\nn\modules\container.py:217) (1,385 samples, 1.40%)</title><rect x="19.5636%" y="420" width="1.4031%" height="15" fill="rgb(229,81,49)" fg:x="19311" fg:w="1385"/><text x="19.8136%" y="430.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (1,281 samples, 1.30%)</title><rect x="19.6689%" y="436" width="1.2978%" height="15" fill="rgb(236,28,36)" fg:x="19415" fg:w="1281"/><text x="19.9189%" y="446.50"></text></g><g><title>forward (torch\nn\modules\linear.py:114) (1,102 samples, 1.12%)</title><rect x="19.8503%" y="452" width="1.1164%" height="15" fill="rgb(249,185,26)" fg:x="19594" fg:w="1102"/><text x="20.1003%" y="462.50"></text></g><g><title>forward (torch\nn\modules\activation.py:103) (167 samples, 0.17%)</title><rect x="21.5016%" y="452" width="0.1692%" height="15" fill="rgb(249,174,33)" fg:x="21224" fg:w="167"/><text x="21.7516%" y="462.50"></text></g><g><title>relu (torch\nn\functional.py:1457) (160 samples, 0.16%)</title><rect x="21.5087%" y="468" width="0.1621%" height="15" fill="rgb(233,201,37)" fg:x="21231" fg:w="160"/><text x="21.7587%" y="478.50"></text></g><g><title>forward (networks.py:93) (1,914 samples, 1.94%)</title><rect x="20.9677%" y="388" width="1.9390%" height="15" fill="rgb(221,78,26)" fg:x="20697" fg:w="1914"/><text x="21.2177%" y="398.50">f..</text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (1,526 samples, 1.55%)</title><rect x="21.3608%" y="404" width="1.5460%" height="15" fill="rgb(250,127,30)" fg:x="21085" fg:w="1526"/><text x="21.6108%" y="414.50"></text></g><g><title>forward (torch\nn\modules\container.py:217) (1,506 samples, 1.53%)</title><rect x="21.3810%" y="420" width="1.5257%" height="15" fill="rgb(230,49,44)" fg:x="21105" fg:w="1506"/><text x="21.6310%" y="430.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (1,399 samples, 1.42%)</title><rect x="21.4894%" y="436" width="1.4173%" height="15" fill="rgb(229,67,23)" fg:x="21212" fg:w="1399"/><text x="21.7394%" y="446.50"></text></g><g><title>forward (torch\nn\modules\linear.py:114) (1,220 samples, 1.24%)</title><rect x="21.6708%" y="452" width="1.2360%" height="15" fill="rgb(249,83,47)" fg:x="21391" fg:w="1220"/><text x="21.9208%" y="462.50"></text></g><g><title>forward (networks.py:49) (3,644 samples, 3.69%)</title><rect x="19.2161%" y="340" width="3.6917%" height="15" fill="rgb(215,43,3)" fg:x="18968" fg:w="3644"/><text x="19.4661%" y="350.50">forw..</text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (3,625 samples, 3.67%)</title><rect x="19.2353%" y="356" width="3.6724%" height="15" fill="rgb(238,154,13)" fg:x="18987" fg:w="3625"/><text x="19.4853%" y="366.50">_cal..</text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (3,601 samples, 3.65%)</title><rect x="19.2596%" y="372" width="3.6481%" height="15" fill="rgb(219,56,2)" fg:x="19011" fg:w="3601"/><text x="19.5096%" y="382.50">deco..</text></g><g><title>_predict (policies.py:81) (3,845 samples, 3.90%)</title><rect x="19.1452%" y="292" width="3.8953%" height="15" fill="rgb(233,0,4)" fg:x="18898" fg:w="3845"/><text x="19.3952%" y="302.50">_pre..</text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (3,838 samples, 3.89%)</title><rect x="19.1523%" y="308" width="3.8882%" height="15" fill="rgb(235,30,7)" fg:x="18905" fg:w="3838"/><text x="19.4023%" y="318.50">_cal..</text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (3,798 samples, 3.85%)</title><rect x="19.1928%" y="324" width="3.8477%" height="15" fill="rgb(250,79,13)" fg:x="18945" fg:w="3798"/><text x="19.4428%" y="334.50">deco..</text></g><g><title>predict (stable_baselines3\common\policies.py:349) (4,722 samples, 4.78%)</title><rect x="18.3833%" y="244" width="4.7838%" height="15" fill="rgb(211,146,34)" fg:x="18146" fg:w="4722"/><text x="18.6333%" y="254.50">predic..</text></g><g><title>_predict (policies.py:107) (4,425 samples, 4.48%)</title><rect x="18.6842%" y="260" width="4.4829%" height="15" fill="rgb(228,22,38)" fg:x="18443" fg:w="4425"/><text x="18.9342%" y="270.50">_pred..</text></g><g><title>decorate_context (torch\utils\_contextlib.py:115) (4,424 samples, 4.48%)</title><rect x="18.6852%" y="276" width="4.4819%" height="15" fill="rgb(235,168,5)" fg:x="18444" fg:w="4424"/><text x="18.9352%" y="286.50">decor..</text></g><g><title>evaluate_policy (stable_baselines3\common\evaluation.py:88) (4,813 samples, 4.88%)</title><rect x="18.2992%" y="212" width="4.8759%" height="15" fill="rgb(221,155,16)" fg:x="18063" fg:w="4813"/><text x="18.5492%" y="222.50">evalua..</text></g><g><title>predict (stable_baselines3\common\base_class.py:555) (4,813 samples, 4.88%)</title><rect x="18.2992%" y="228" width="4.8759%" height="15" fill="rgb(215,215,53)" fg:x="18063" fg:w="4813"/><text x="18.5492%" y="238.50">predic..</text></g><g><title>step (success.py:10) (106 samples, 0.11%)</title><rect x="23.1823%" y="308" width="0.1074%" height="15" fill="rgb(223,4,10)" fg:x="22883" fg:w="106"/><text x="23.4323%" y="318.50"></text></g><g><title>step (gymnasium\core.py:408) (106 samples, 0.11%)</title><rect x="23.1823%" y="324" width="0.1074%" height="15" fill="rgb(234,103,6)" fg:x="22883" fg:w="106"/><text x="23.4323%" y="334.50"></text></g><g><title>step (gymnasium\core.py:469) (123 samples, 0.12%)</title><rect x="23.1813%" y="292" width="0.1246%" height="15" fill="rgb(227,97,0)" fg:x="22882" fg:w="123"/><text x="23.4313%" y="302.50"></text></g><g><title>step (gymnasium\wrappers\time_limit.py:57) (568 samples, 0.58%)</title><rect x="23.1792%" y="276" width="0.5754%" height="15" fill="rgb(234,150,53)" fg:x="22880" fg:w="568"/><text x="23.4292%" y="286.50"></text></g><g><title>step (gymnasium\core.py:470) (443 samples, 0.45%)</title><rect x="23.3059%" y="292" width="0.4488%" height="15" fill="rgb(228,201,54)" fg:x="23005" fg:w="443"/><text x="23.5559%" y="302.50"></text></g><g><title>observation (heatmap.py:38) (440 samples, 0.45%)</title><rect x="23.3089%" y="308" width="0.4458%" height="15" fill="rgb(222,22,37)" fg:x="23008" fg:w="440"/><text x="23.5589%" y="318.50"></text></g><g><title>add_to_heatmap (heatmap.py:35) (344 samples, 0.35%)</title><rect x="23.4062%" y="324" width="0.3485%" height="15" fill="rgb(237,53,32)" fg:x="23104" fg:w="344"/><text x="23.6562%" y="334.50"></text></g><g><title>step (wrappers\cemrl_wrapper.py:63) (572 samples, 0.58%)</title><rect x="23.1782%" y="260" width="0.5795%" height="15" fill="rgb(233,25,53)" fg:x="22879" fg:w="572"/><text x="23.4282%" y="270.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\dummy_vec_env.py:58) (663 samples, 0.67%)</title><rect x="23.1752%" y="244" width="0.6717%" height="15" fill="rgb(210,40,34)" fg:x="22876" fg:w="663"/><text x="23.4252%" y="254.50"></text></g><g><title>evaluate_policy (stable_baselines3\common\evaluation.py:94) (750 samples, 0.76%)</title><rect x="23.1752%" y="212" width="0.7598%" height="15" fill="rgb(241,220,44)" fg:x="22876" fg:w="750"/><text x="23.4252%" y="222.50"></text></g><g><title>step (stable_baselines3\common\vec_env\base_vec_env.py:180) (750 samples, 0.76%)</title><rect x="23.1752%" y="228" width="0.7598%" height="15" fill="rgb(235,28,35)" fg:x="22876" fg:w="750"/><text x="23.4252%" y="238.50"></text></g><g><title>_on_step (callbacks\plan2explore_eval_callback.py:88) (5,624 samples, 5.70%)</title><rect x="18.2395%" y="196" width="5.6976%" height="15" fill="rgb(210,56,17)" fg:x="18004" fg:w="5624"/><text x="18.4895%" y="206.50">_on_ste..</text></g><g><title>_on_step (callbacks\save_heatmap_callback.py:47) (220 samples, 0.22%)</title><rect x="23.9411%" y="196" width="0.2229%" height="15" fill="rgb(224,130,29)" fg:x="23632" fg:w="220"/><text x="24.1911%" y="206.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:200) (218 samples, 0.22%)</title><rect x="23.9431%" y="212" width="0.2209%" height="15" fill="rgb(235,212,8)" fg:x="23634" fg:w="218"/><text x="24.1931%" y="222.50"></text></g><g><title>sum (numpy\core\fromnumeric.py:2324) (218 samples, 0.22%)</title><rect x="23.9431%" y="228" width="0.2209%" height="15" fill="rgb(223,33,50)" fg:x="23634" fg:w="218"/><text x="24.1931%" y="238.50"></text></g><g><title>_wrapreduction (numpy\core\fromnumeric.py:86) (218 samples, 0.22%)</title><rect x="23.9431%" y="244" width="0.2209%" height="15" fill="rgb(219,149,13)" fg:x="23634" fg:w="218"/><text x="24.1931%" y="254.50"></text></g><g><title>forward (networks.py:30) (202 samples, 0.20%)</title><rect x="24.3281%" y="324" width="0.2046%" height="15" fill="rgb(250,156,29)" fg:x="24014" fg:w="202"/><text x="24.5781%" y="334.50"></text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (200 samples, 0.20%)</title><rect x="24.3301%" y="340" width="0.2026%" height="15" fill="rgb(216,193,19)" fg:x="24016" fg:w="200"/><text x="24.5801%" y="350.50"></text></g><g><title>_predict (policies.py:68) (230 samples, 0.23%)</title><rect x="24.3250%" y="276" width="0.2330%" height="15" fill="rgb(216,135,14)" fg:x="24011" fg:w="230"/><text x="24.5750%" y="286.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (230 samples, 0.23%)</title><rect x="24.3250%" y="292" width="0.2330%" height="15" fill="rgb(241,47,5)" fg:x="24011" fg:w="230"/><text x="24.5750%" y="302.50"></text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (229 samples, 0.23%)</title><rect x="24.3260%" y="308" width="0.2320%" height="15" fill="rgb(233,42,35)" fg:x="24012" fg:w="229"/><text x="24.5760%" y="318.50"></text></g><g><title>predict (stable_baselines3\common\policies.py:349) (283 samples, 0.29%)</title><rect x="24.3200%" y="244" width="0.2867%" height="15" fill="rgb(231,13,6)" fg:x="24006" fg:w="283"/><text x="24.5700%" y="254.50"></text></g><g><title>decorate_context (torch\utils\_contextlib.py:115) (281 samples, 0.28%)</title><rect x="24.3220%" y="260" width="0.2847%" height="15" fill="rgb(207,181,40)" fg:x="24008" fg:w="281"/><text x="24.5720%" y="270.50"></text></g><g><title>evaluate_policy (stable_baselines3\common\evaluation.py:88) (356 samples, 0.36%)</title><rect x="24.2501%" y="212" width="0.3607%" height="15" fill="rgb(254,173,49)" fg:x="23937" fg:w="356"/><text x="24.5001%" y="222.50"></text></g><g><title>predict (stable_baselines3\common\base_class.py:555) (356 samples, 0.36%)</title><rect x="24.2501%" y="228" width="0.3607%" height="15" fill="rgb(221,1,38)" fg:x="23937" fg:w="356"/><text x="24.5001%" y="238.50"></text></g><g><title>step (gymnasium\core.py:469) (107 samples, 0.11%)</title><rect x="24.6178%" y="292" width="0.1084%" height="15" fill="rgb(206,124,46)" fg:x="24300" fg:w="107"/><text x="24.8678%" y="302.50"></text></g><g><title>step (gymnasium\wrappers\time_limit.py:57) (537 samples, 0.54%)</title><rect x="24.6158%" y="276" width="0.5440%" height="15" fill="rgb(249,21,11)" fg:x="24298" fg:w="537"/><text x="24.8658%" y="286.50"></text></g><g><title>step (gymnasium\core.py:470) (428 samples, 0.43%)</title><rect x="24.7262%" y="292" width="0.4336%" height="15" fill="rgb(222,201,40)" fg:x="24407" fg:w="428"/><text x="24.9762%" y="302.50"></text></g><g><title>observation (heatmap.py:38) (425 samples, 0.43%)</title><rect x="24.7293%" y="308" width="0.4306%" height="15" fill="rgb(235,61,29)" fg:x="24410" fg:w="425"/><text x="24.9793%" y="318.50"></text></g><g><title>add_to_heatmap (heatmap.py:35) (350 samples, 0.35%)</title><rect x="24.8052%" y="324" width="0.3546%" height="15" fill="rgb(219,207,3)" fg:x="24485" fg:w="350"/><text x="25.0552%" y="334.50"></text></g><g><title>step (wrappers\cemrl_wrapper.py:63) (540 samples, 0.55%)</title><rect x="24.6158%" y="260" width="0.5471%" height="15" fill="rgb(222,56,46)" fg:x="24298" fg:w="540"/><text x="24.8658%" y="270.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\dummy_vec_env.py:58) (601 samples, 0.61%)</title><rect x="24.6117%" y="244" width="0.6089%" height="15" fill="rgb(239,76,54)" fg:x="24294" fg:w="601"/><text x="24.8617%" y="254.50"></text></g><g><title>_on_step (stable_baselines3\common\callbacks.py:460) (1,081 samples, 1.10%)</title><rect x="24.1994%" y="196" width="1.0951%" height="15" fill="rgb(231,124,27)" fg:x="23887" fg:w="1081"/><text x="24.4494%" y="206.50"></text></g><g><title>evaluate_policy (stable_baselines3\common\evaluation.py:94) (675 samples, 0.68%)</title><rect x="24.6107%" y="212" width="0.6838%" height="15" fill="rgb(249,195,6)" fg:x="24293" fg:w="675"/><text x="24.8607%" y="222.50"></text></g><g><title>step (stable_baselines3\common\vec_env\base_vec_env.py:180) (675 samples, 0.68%)</title><rect x="24.6107%" y="228" width="0.6838%" height="15" fill="rgb(237,174,47)" fg:x="24293" fg:w="675"/><text x="24.8607%" y="238.50"></text></g><g><title>encode (networks.py:46) (181 samples, 0.18%)</title><rect x="25.5367%" y="388" width="0.1834%" height="15" fill="rgb(206,201,31)" fg:x="25207" fg:w="181"/><text x="25.7867%" y="398.50"></text></g><g><title>__init__ (torch\distributions\categorical.py:66) (179 samples, 0.18%)</title><rect x="25.5387%" y="404" width="0.1813%" height="15" fill="rgb(231,57,52)" fg:x="25209" fg:w="179"/><text x="25.7887%" y="414.50"></text></g><g><title>__init__ (torch\distributions\distribution.py:61) (162 samples, 0.16%)</title><rect x="25.5559%" y="420" width="0.1641%" height="15" fill="rgb(248,177,22)" fg:x="25226" fg:w="162"/><text x="25.8059%" y="430.50"></text></g><g><title>forward (networks.py:30) (337 samples, 0.34%)</title><rect x="25.4475%" y="356" width="0.3414%" height="15" fill="rgb(215,211,37)" fg:x="25119" fg:w="337"/><text x="25.6975%" y="366.50"></text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (337 samples, 0.34%)</title><rect x="25.4475%" y="372" width="0.3414%" height="15" fill="rgb(241,128,51)" fg:x="25119" fg:w="337"/><text x="25.6975%" y="382.50"></text></g><g><title>_predict (policies.py:68) (362 samples, 0.37%)</title><rect x="25.4465%" y="308" width="0.3667%" height="15" fill="rgb(227,165,31)" fg:x="25118" fg:w="362"/><text x="25.6965%" y="318.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (361 samples, 0.37%)</title><rect x="25.4475%" y="324" width="0.3657%" height="15" fill="rgb(228,167,24)" fg:x="25119" fg:w="361"/><text x="25.6975%" y="334.50"></text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (361 samples, 0.37%)</title><rect x="25.4475%" y="340" width="0.3657%" height="15" fill="rgb(228,143,12)" fg:x="25119" fg:w="361"/><text x="25.6975%" y="350.50"></text></g><g><title>predict (stable_baselines3\common\policies.py:349) (438 samples, 0.44%)</title><rect x="25.4455%" y="276" width="0.4437%" height="15" fill="rgb(249,149,8)" fg:x="25117" fg:w="438"/><text x="25.6955%" y="286.50"></text></g><g><title>decorate_context (torch\utils\_contextlib.py:115) (437 samples, 0.44%)</title><rect x="25.4465%" y="292" width="0.4427%" height="15" fill="rgb(243,35,44)" fg:x="25118" fg:w="437"/><text x="25.6965%" y="302.50"></text></g><g><title>evaluate_policy (stable_baselines3\common\evaluation.py:88) (554 samples, 0.56%)</title><rect x="25.3371%" y="244" width="0.5612%" height="15" fill="rgb(246,89,9)" fg:x="25010" fg:w="554"/><text x="25.5871%" y="254.50"></text></g><g><title>predict (stable_baselines3\common\base_class.py:555) (554 samples, 0.56%)</title><rect x="25.3371%" y="260" width="0.5612%" height="15" fill="rgb(233,213,13)" fg:x="25010" fg:w="554"/><text x="25.5871%" y="270.50"></text></g><g><title>step (gymnasium\core.py:469) (128 samples, 0.13%)</title><rect x="25.9146%" y="340" width="0.1297%" height="15" fill="rgb(233,141,41)" fg:x="25580" fg:w="128"/><text x="26.1646%" y="350.50"></text></g><g><title>step (gymnasium\wrappers\time_limit.py:57) (557 samples, 0.56%)</title><rect x="25.9115%" y="324" width="0.5643%" height="15" fill="rgb(239,167,4)" fg:x="25577" fg:w="557"/><text x="26.1615%" y="334.50"></text></g><g><title>step (gymnasium\core.py:470) (426 samples, 0.43%)</title><rect x="26.0442%" y="340" width="0.4316%" height="15" fill="rgb(209,217,16)" fg:x="25708" fg:w="426"/><text x="26.2942%" y="350.50"></text></g><g><title>observation (heatmap.py:38) (424 samples, 0.43%)</title><rect x="26.0463%" y="356" width="0.4295%" height="15" fill="rgb(219,88,35)" fg:x="25710" fg:w="424"/><text x="26.2963%" y="366.50"></text></g><g><title>add_to_heatmap (heatmap.py:35) (346 samples, 0.35%)</title><rect x="26.1253%" y="372" width="0.3505%" height="15" fill="rgb(220,193,23)" fg:x="25788" fg:w="346"/><text x="26.3753%" y="382.50"></text></g><g><title>step (wrappers\cemrl_wrapper.py:63) (564 samples, 0.57%)</title><rect x="25.9095%" y="308" width="0.5714%" height="15" fill="rgb(230,90,52)" fg:x="25575" fg:w="564"/><text x="26.1595%" y="318.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\dummy_vec_env.py:58) (632 samples, 0.64%)</title><rect x="25.9034%" y="292" width="0.6403%" height="15" fill="rgb(252,106,19)" fg:x="25569" fg:w="632"/><text x="26.1534%" y="302.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\vec_video_recorder.py:88) (698 samples, 0.71%)</title><rect x="25.9014%" y="276" width="0.7071%" height="15" fill="rgb(206,74,20)" fg:x="25567" fg:w="698"/><text x="26.1514%" y="286.50"></text></g><g><title>tile_images (stable_baselines3\common\vec_env\base_vec_env.py:38) (102 samples, 0.10%)</title><rect x="26.7686%" y="340" width="0.1033%" height="15" fill="rgb(230,138,44)" fg:x="26423" fg:w="102"/><text x="27.0186%" y="350.50"></text></g><g><title>capture_frame (gymnasium\wrappers\monitoring\video_recorder.py:114) (333 samples, 0.34%)</title><rect x="26.6095%" y="292" width="0.3374%" height="15" fill="rgb(235,182,43)" fg:x="26266" fg:w="333"/><text x="26.8595%" y="302.50"></text></g><g><title>render (stable_baselines3\common\vec_env\dummy_vec_env.py:101) (332 samples, 0.34%)</title><rect x="26.6105%" y="308" width="0.3363%" height="15" fill="rgb(242,16,51)" fg:x="26267" fg:w="332"/><text x="26.8605%" y="318.50"></text></g><g><title>render (stable_baselines3\common\vec_env\base_vec_env.py:231) (268 samples, 0.27%)</title><rect x="26.6754%" y="324" width="0.2715%" height="15" fill="rgb(248,9,4)" fg:x="26331" fg:w="268"/><text x="26.9254%" y="334.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\vec_video_recorder.py:92) (334 samples, 0.34%)</title><rect x="26.6095%" y="276" width="0.3384%" height="15" fill="rgb(210,31,22)" fg:x="26266" fg:w="334"/><text x="26.8595%" y="286.50"></text></g><g><title>ffmpeg_write_video (moviepy\video\io\ffmpeg_writer.py:228) (161 samples, 0.16%)</title><rect x="27.0310%" y="436" width="0.1631%" height="15" fill="rgb(239,54,39)" fg:x="26682" fg:w="161"/><text x="27.2810%" y="446.50"></text></g><g><title>write_frame (moviepy\video\io\ffmpeg_writer.py:136) (161 samples, 0.16%)</title><rect x="27.0310%" y="452" width="0.1631%" height="15" fill="rgb(230,99,41)" fg:x="26682" fg:w="161"/><text x="27.2810%" y="462.50"></text></g><g><title>evaluate_policy (stable_baselines3\common\evaluation.py:94) (1,281 samples, 1.30%)</title><rect x="25.8983%" y="244" width="1.2978%" height="15" fill="rgb(253,106,12)" fg:x="25564" fg:w="1281"/><text x="26.1483%" y="254.50"></text></g><g><title>step (stable_baselines3\common\vec_env\base_vec_env.py:180) (1,278 samples, 1.29%)</title><rect x="25.9014%" y="260" width="1.2947%" height="15" fill="rgb(213,46,41)" fg:x="25567" fg:w="1278"/><text x="26.1514%" y="270.50"></text></g><g><title>step_wait (stable_baselines3\common\vec_env\vec_video_recorder.py:96) (245 samples, 0.25%)</title><rect x="26.9479%" y="276" width="0.2482%" height="15" fill="rgb(215,133,35)" fg:x="26600" fg:w="245"/><text x="27.1979%" y="286.50"></text></g><g><title>close_video_recorder (stable_baselines3\common\vec_env\vec_video_recorder.py:104) (245 samples, 0.25%)</title><rect x="26.9479%" y="292" width="0.2482%" height="15" fill="rgb(213,28,5)" fg:x="26600" fg:w="245"/><text x="27.1979%" y="302.50"></text></g><g><title>close (gymnasium\wrappers\monitoring\video_recorder.py:164) (239 samples, 0.24%)</title><rect x="26.9540%" y="308" width="0.2421%" height="15" fill="rgb(215,77,49)" fg:x="26606" fg:w="239"/><text x="27.2040%" y="318.50"></text></g><g><title>write_videofile (&lt;decorator-gen-69&gt;:2) (239 samples, 0.24%)</title><rect x="26.9540%" y="324" width="0.2421%" height="15" fill="rgb(248,100,22)" fg:x="26606" fg:w="239"/><text x="27.2040%" y="334.50"></text></g><g><title>requires_duration (moviepy\decorators.py:54) (239 samples, 0.24%)</title><rect x="26.9540%" y="340" width="0.2421%" height="15" fill="rgb(208,67,9)" fg:x="26606" fg:w="239"/><text x="27.2040%" y="350.50"></text></g><g><title>write_videofile (&lt;decorator-gen-68&gt;:2) (239 samples, 0.24%)</title><rect x="26.9540%" y="356" width="0.2421%" height="15" fill="rgb(219,133,21)" fg:x="26606" fg:w="239"/><text x="27.2040%" y="366.50"></text></g><g><title>use_clip_fps_by_default (moviepy\decorators.py:135) (239 samples, 0.24%)</title><rect x="26.9540%" y="372" width="0.2421%" height="15" fill="rgb(246,46,29)" fg:x="26606" fg:w="239"/><text x="27.2040%" y="382.50"></text></g><g><title>write_videofile (&lt;decorator-gen-67&gt;:2) (239 samples, 0.24%)</title><rect x="26.9540%" y="388" width="0.2421%" height="15" fill="rgb(246,185,52)" fg:x="26606" fg:w="239"/><text x="27.2040%" y="398.50"></text></g><g><title>convert_masks_to_RGB (moviepy\decorators.py:22) (239 samples, 0.24%)</title><rect x="26.9540%" y="404" width="0.2421%" height="15" fill="rgb(252,136,11)" fg:x="26606" fg:w="239"/><text x="27.2040%" y="414.50"></text></g><g><title>write_videofile (moviepy\video\VideoClip.py:300) (239 samples, 0.24%)</title><rect x="26.9540%" y="420" width="0.2421%" height="15" fill="rgb(219,138,53)" fg:x="26606" fg:w="239"/><text x="27.2040%" y="430.50"></text></g><g><title>_on_step (callbacks\record_video.py:30) (1,884 samples, 1.91%)</title><rect x="25.2966%" y="228" width="1.9086%" height="15" fill="rgb(211,51,23)" fg:x="24970" fg:w="1884"/><text x="25.5466%" y="238.50">_..</text></g><g><title>collect_rollouts (stable_baselines3\common\off_policy_algorithm.py:552) (20,717 samples, 20.99%)</title><rect x="6.3743%" y="100" width="20.9880%" height="15" fill="rgb(247,221,28)" fg:x="6292" fg:w="20717"/><text x="6.6243%" y="110.50">collect_rollouts (stable_baseline..</text></g><g><title>on_step (stable_baselines3\common\callbacks.py:104) (20,717 samples, 20.99%)</title><rect x="6.3743%" y="116" width="20.9880%" height="15" fill="rgb(251,222,45)" fg:x="6292" fg:w="20717"/><text x="6.6243%" y="126.50">on_step (stable_baselines3\common..</text></g><g><title>_on_step (stable_baselines3\common\callbacks.py:208) (20,717 samples, 20.99%)</title><rect x="6.3743%" y="132" width="20.9880%" height="15" fill="rgb(217,162,53)" fg:x="6292" fg:w="20717"/><text x="6.6243%" y="142.50">_on_step (stable_baselines3\commo..</text></g><g><title>on_step (stable_baselines3\common\callbacks.py:104) (20,717 samples, 20.99%)</title><rect x="6.3743%" y="148" width="20.9880%" height="15" fill="rgb(229,93,14)" fg:x="6292" fg:w="20717"/><text x="6.6243%" y="158.50">on_step (stable_baselines3\common..</text></g><g><title>_on_step (stable_baselines3\common\callbacks.py:208) (20,717 samples, 20.99%)</title><rect x="6.3743%" y="164" width="20.9880%" height="15" fill="rgb(209,67,49)" fg:x="6292" fg:w="20717"/><text x="6.6243%" y="174.50">_on_step (stable_baselines3\commo..</text></g><g><title>on_step (stable_baselines3\common\callbacks.py:104) (20,717 samples, 20.99%)</title><rect x="6.3743%" y="180" width="20.9880%" height="15" fill="rgb(213,87,29)" fg:x="6292" fg:w="20717"/><text x="6.6243%" y="190.50">on_step (stable_baselines3\common..</text></g><g><title>_on_step (stable_baselines3\common\callbacks.py:511) (2,039 samples, 2.07%)</title><rect x="25.2966%" y="196" width="2.0657%" height="15" fill="rgb(205,151,52)" fg:x="24970" fg:w="2039"/><text x="25.5466%" y="206.50">_..</text></g><g><title>on_step (stable_baselines3\common\callbacks.py:104) (2,039 samples, 2.07%)</title><rect x="25.2966%" y="212" width="2.0657%" height="15" fill="rgb(253,215,39)" fg:x="24970" fg:w="2039"/><text x="25.5466%" y="222.50">o..</text></g><g><title>_on_step (callbacks\record_video.py:40) (155 samples, 0.16%)</title><rect x="27.2052%" y="228" width="0.1570%" height="15" fill="rgb(221,220,41)" fg:x="26854" fg:w="155"/><text x="27.4552%" y="238.50"></text></g><g><title>video (torch\utils\tensorboard\summary.py:510) (1,204 samples, 1.22%)</title><rect x="27.4139%" y="180" width="1.2197%" height="15" fill="rgb(218,133,21)" fg:x="27060" fg:w="1204"/><text x="27.6639%" y="190.50"></text></g><g><title>_prepare_video (torch\utils\tensorboard\_utils.py:49) (1,204 samples, 1.22%)</title><rect x="27.4139%" y="196" width="1.2197%" height="15" fill="rgb(221,193,43)" fg:x="27060" fg:w="1204"/><text x="27.6639%" y="206.50"></text></g><g><title>video (torch\utils\tensorboard\summary.py:513) (462 samples, 0.47%)</title><rect x="28.6337%" y="180" width="0.4680%" height="15" fill="rgb(240,128,52)" fg:x="28264" fg:w="462"/><text x="28.8837%" y="190.50"></text></g><g><title>video (torch\utils\tensorboard\summary.py:514) (1,409 samples, 1.43%)</title><rect x="29.1017%" y="180" width="1.4274%" height="15" fill="rgb(253,114,12)" fg:x="28726" fg:w="1409"/><text x="29.3517%" y="190.50"></text></g><g><title>_clip (numpy\core\_methods.py:161) (844 samples, 0.86%)</title><rect x="29.6741%" y="196" width="0.8550%" height="15" fill="rgb(215,223,47)" fg:x="29291" fg:w="844"/><text x="29.9241%" y="206.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy\core\_methods.py:115) (844 samples, 0.86%)</title><rect x="29.6741%" y="212" width="0.8550%" height="15" fill="rgb(248,225,23)" fg:x="29291" fg:w="844"/><text x="29.9241%" y="222.50"></text></g><g><title>convert (PIL\Image.py:1027) (1,615 samples, 1.64%)</title><rect x="30.5626%" y="436" width="1.6361%" height="15" fill="rgb(250,108,0)" fg:x="30168" fg:w="1615"/><text x="30.8126%" y="446.50"></text></g><g><title>_normalize_mode (PIL\GifImagePlugin.py:485) (1,619 samples, 1.64%)</title><rect x="30.5615%" y="420" width="1.6402%" height="15" fill="rgb(228,208,7)" fg:x="30167" fg:w="1619"/><text x="30.8115%" y="430.50"></text></g><g><title>_write_multiple_frames (PIL\GifImagePlugin.py:579) (1,667 samples, 1.69%)</title><rect x="30.5484%" y="404" width="1.6888%" height="15" fill="rgb(244,45,10)" fg:x="30154" fg:w="1667"/><text x="30.7984%" y="414.50"></text></g><g><title>_flush_writer (imageio\plugins\pillow.py:428) (1,929 samples, 1.95%)</title><rect x="30.5342%" y="340" width="1.9542%" height="15" fill="rgb(207,125,25)" fg:x="30140" fg:w="1929"/><text x="30.7842%" y="350.50">_..</text></g><g><title>save (PIL\Image.py:2354) (1,929 samples, 1.95%)</title><rect x="30.5342%" y="356" width="1.9542%" height="15" fill="rgb(210,195,18)" fg:x="30140" fg:w="1929"/><text x="30.7842%" y="366.50">s..</text></g><g><title>_save_all (PIL\GifImagePlugin.py:653) (1,929 samples, 1.95%)</title><rect x="30.5342%" y="372" width="1.9542%" height="15" fill="rgb(249,80,12)" fg:x="30140" fg:w="1929"/><text x="30.7842%" y="382.50">_..</text></g><g><title>_save (PIL\GifImagePlugin.py:664) (1,929 samples, 1.95%)</title><rect x="30.5342%" y="388" width="1.9542%" height="15" fill="rgb(221,65,9)" fg:x="30140" fg:w="1929"/><text x="30.7842%" y="398.50">_..</text></g><g><title>_write_multiple_frames (PIL\GifImagePlugin.py:643) (169 samples, 0.17%)</title><rect x="32.3172%" y="404" width="0.1712%" height="15" fill="rgb(235,49,36)" fg:x="31900" fg:w="169"/><text x="32.5672%" y="414.50"></text></g><g><title>_write_frame_data (PIL\GifImagePlugin.py:975) (169 samples, 0.17%)</title><rect x="32.3172%" y="420" width="0.1712%" height="15" fill="rgb(225,32,20)" fg:x="31900" fg:w="169"/><text x="32.5672%" y="430.50"></text></g><g><title>_save (PIL\ImageFile.py:505) (169 samples, 0.17%)</title><rect x="32.3172%" y="436" width="0.1712%" height="15" fill="rgb(215,141,46)" fg:x="31900" fg:w="169"/><text x="32.5672%" y="446.50"></text></g><g><title>_encode_tile (PIL\ImageFile.py:532) (169 samples, 0.17%)</title><rect x="32.3172%" y="452" width="0.1712%" height="15" fill="rgb(250,160,47)" fg:x="31900" fg:w="169"/><text x="32.5672%" y="462.50"></text></g><g><title>__del__ (imageio\v2.py:189) (1,935 samples, 1.96%)</title><rect x="30.5342%" y="292" width="1.9603%" height="15" fill="rgb(216,222,40)" fg:x="30140" fg:w="1935"/><text x="30.7842%" y="302.50">_..</text></g><g><title>close (imageio\v2.py:179) (1,935 samples, 1.96%)</title><rect x="30.5342%" y="308" width="1.9603%" height="15" fill="rgb(234,217,39)" fg:x="30140" fg:w="1935"/><text x="30.7842%" y="318.50">c..</text></g><g><title>close (imageio\plugins\pillow.py:120) (1,935 samples, 1.96%)</title><rect x="30.5342%" y="324" width="1.9603%" height="15" fill="rgb(207,178,40)" fg:x="30140" fg:w="1935"/><text x="30.7842%" y="334.50">c..</text></g><g><title>video (torch\utils\tensorboard\summary.py:515) (2,014 samples, 2.04%)</title><rect x="30.5291%" y="180" width="2.0403%" height="15" fill="rgb(221,136,13)" fg:x="30135" fg:w="2014"/><text x="30.7791%" y="190.50">v..</text></g><g><title>make_video (torch\utils\tensorboard\summary.py:542) (2,009 samples, 2.04%)</title><rect x="30.5342%" y="196" width="2.0353%" height="15" fill="rgb(249,199,10)" fg:x="30140" fg:w="2009"/><text x="30.7842%" y="206.50">m..</text></g><g><title>write_gif (&lt;decorator-gen-74&gt;:2) (2,009 samples, 2.04%)</title><rect x="30.5342%" y="212" width="2.0353%" height="15" fill="rgb(249,222,13)" fg:x="30140" fg:w="2009"/><text x="30.7842%" y="222.50">w..</text></g><g><title>requires_duration (moviepy\decorators.py:54) (2,009 samples, 2.04%)</title><rect x="30.5342%" y="228" width="2.0353%" height="15" fill="rgb(244,185,38)" fg:x="30140" fg:w="2009"/><text x="30.7842%" y="238.50">r..</text></g><g><title>write_gif (&lt;decorator-gen-73&gt;:2) (2,009 samples, 2.04%)</title><rect x="30.5342%" y="244" width="2.0353%" height="15" fill="rgb(236,202,9)" fg:x="30140" fg:w="2009"/><text x="30.7842%" y="254.50">w..</text></g><g><title>convert_masks_to_RGB (moviepy\decorators.py:22) (2,009 samples, 2.04%)</title><rect x="30.5342%" y="260" width="2.0353%" height="15" fill="rgb(250,229,37)" fg:x="30140" fg:w="2009"/><text x="30.7842%" y="270.50">c..</text></g><g><title>write_gif (moviepy\video\VideoClip.py:432) (2,009 samples, 2.04%)</title><rect x="30.5342%" y="276" width="2.0353%" height="15" fill="rgb(206,174,23)" fg:x="30140" fg:w="2009"/><text x="30.7842%" y="286.50">w..</text></g><g><title>dump (stable_baselines3\common\logger.py:536) (5,092 samples, 5.16%)</title><rect x="27.4119%" y="132" width="5.1586%" height="15" fill="rgb(211,33,43)" fg:x="27058" fg:w="5092"/><text x="27.6619%" y="142.50">dump (..</text></g><g><title>write (stable_baselines3\common\logger.py:417) (5,090 samples, 5.16%)</title><rect x="27.4139%" y="148" width="5.1566%" height="15" fill="rgb(245,58,50)" fg:x="27060" fg:w="5090"/><text x="27.6639%" y="158.50">write ..</text></g><g><title>add_video (torch\utils\tensorboard\writer.py:773) (5,090 samples, 5.16%)</title><rect x="27.4139%" y="164" width="5.1566%" height="15" fill="rgb(244,68,36)" fg:x="27060" fg:w="5090"/><text x="27.6639%" y="174.50">add_vi..</text></g><g><title>learn (stable_baselines3\common\off_policy_algorithm.py:312) (32,154 samples, 32.57%)</title><rect x="0.0000%" y="84" width="32.5745%" height="15" fill="rgb(232,229,15)" fg:x="0" fg:w="32154"/><text x="0.2500%" y="94.50">learn (stable_baselines3\common\off_policy_algorithm...</text></g><g><title>collect_rollouts (stable_baselines3\common\off_policy_algorithm.py:581) (5,096 samples, 5.16%)</title><rect x="27.4119%" y="100" width="5.1626%" height="15" fill="rgb(254,30,23)" fg:x="27058" fg:w="5096"/><text x="27.6619%" y="110.50">collec..</text></g><g><title>_dump_logs (stable_baselines3\common\off_policy_algorithm.py:411) (5,096 samples, 5.16%)</title><rect x="27.4119%" y="116" width="5.1626%" height="15" fill="rgb(235,160,14)" fg:x="27058" fg:w="5096"/><text x="27.6619%" y="126.50">_dump_..</text></g><g><title>train (torch\nn\modules\module.py:2288) (115 samples, 0.12%)</title><rect x="32.8460%" y="212" width="0.1165%" height="15" fill="rgb(212,155,44)" fg:x="32422" fg:w="115"/><text x="33.0960%" y="222.50"></text></g><g><title>reconstruction_training_step (cemrl.py:120) (222 samples, 0.22%)</title><rect x="32.7387%" y="116" width="0.2249%" height="15" fill="rgb(226,2,50)" fg:x="32316" fg:w="222"/><text x="32.9887%" y="126.50"></text></g><g><title>set_training_mode (stable_baselines3\common\policies.py:209) (221 samples, 0.22%)</title><rect x="32.7397%" y="132" width="0.2239%" height="15" fill="rgb(234,177,6)" fg:x="32317" fg:w="221"/><text x="32.9897%" y="142.50"></text></g><g><title>train (torch\nn\modules\module.py:2288) (201 samples, 0.20%)</title><rect x="32.7599%" y="148" width="0.2036%" height="15" fill="rgb(217,24,9)" fg:x="32337" fg:w="201"/><text x="33.0099%" y="158.50"></text></g><g><title>train (torch\nn\modules\module.py:2288) (193 samples, 0.20%)</title><rect x="32.7680%" y="164" width="0.1955%" height="15" fill="rgb(220,13,46)" fg:x="32345" fg:w="193"/><text x="33.0180%" y="174.50"></text></g><g><title>train (torch\nn\modules\module.py:2288) (172 samples, 0.17%)</title><rect x="32.7893%" y="180" width="0.1742%" height="15" fill="rgb(239,221,27)" fg:x="32366" fg:w="172"/><text x="33.0393%" y="190.50"></text></g><g><title>train (torch\nn\modules\module.py:2288) (149 samples, 0.15%)</title><rect x="32.8126%" y="196" width="0.1509%" height="15" fill="rgb(222,198,25)" fg:x="32389" fg:w="149"/><text x="33.0626%" y="206.50"></text></g><g><title>valid_indices (buffers.py:108) (516 samples, 0.52%)</title><rect x="33.1297%" y="132" width="0.5227%" height="15" fill="rgb(211,99,13)" fg:x="32702" fg:w="516"/><text x="33.3797%" y="142.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:200) (413 samples, 0.42%)</title><rect x="33.2341%" y="148" width="0.4184%" height="15" fill="rgb(232,111,31)" fg:x="32805" fg:w="413"/><text x="33.4841%" y="158.50"></text></g><g><title>reconstruction_training_step (cemrl.py:121) (1,223 samples, 1.24%)</title><rect x="32.9636%" y="116" width="1.2390%" height="15" fill="rgb(245,82,37)" fg:x="32538" fg:w="1223"/><text x="33.2136%" y="126.50"></text></g><g><title>valid_indices (buffers.py:109) (543 samples, 0.55%)</title><rect x="33.6525%" y="132" width="0.5501%" height="15" fill="rgb(227,149,46)" fg:x="33218" fg:w="543"/><text x="33.9025%" y="142.50"></text></g><g><title>get_encoder_context (buffers.py:143) (359 samples, 0.36%)</title><rect x="34.4112%" y="132" width="0.3637%" height="15" fill="rgb(218,36,50)" fg:x="33967" fg:w="359"/><text x="34.6612%" y="142.50"></text></g><g><title>get_encoder_context (buffers.py:144) (230 samples, 0.23%)</title><rect x="34.7749%" y="132" width="0.2330%" height="15" fill="rgb(226,80,48)" fg:x="34326" fg:w="230"/><text x="35.0249%" y="142.50"></text></g><g><title>get_encoder_context (buffers.py:145) (209 samples, 0.21%)</title><rect x="35.0080%" y="132" width="0.2117%" height="15" fill="rgb(238,224,15)" fg:x="34556" fg:w="209"/><text x="35.2580%" y="142.50"></text></g><g><title>get_encoder_context (buffers.py:147) (120 samples, 0.12%)</title><rect x="35.3159%" y="132" width="0.1216%" height="15" fill="rgb(241,136,10)" fg:x="34860" fg:w="120"/><text x="35.5659%" y="142.50"></text></g><g><title>get_encoder_context (buffers.py:154) (574 samples, 0.58%)</title><rect x="35.5733%" y="132" width="0.5815%" height="15" fill="rgb(208,32,45)" fg:x="35114" fg:w="574"/><text x="35.8233%" y="142.50"></text></g><g><title>get_encoder_context (buffers.py:155) (534 samples, 0.54%)</title><rect x="36.1548%" y="132" width="0.5410%" height="15" fill="rgb(207,135,9)" fg:x="35688" fg:w="534"/><text x="36.4048%" y="142.50"></text></g><g><title>reconstruction_training_step (cemrl.py:123) (2,789 samples, 2.83%)</title><rect x="34.2026%" y="116" width="2.8255%" height="15" fill="rgb(206,86,44)" fg:x="33761" fg:w="2789"/><text x="34.4526%" y="126.50">re..</text></g><g><title>factorize_array (pandas\core\algorithms.py:574) (188 samples, 0.19%)</title><rect x="37.1141%" y="260" width="0.1905%" height="15" fill="rgb(245,177,15)" fg:x="36635" fg:w="188"/><text x="37.3641%" y="270.50"></text></g><g><title>factorize (pandas\core\algorithms.py:818) (189 samples, 0.19%)</title><rect x="37.1141%" y="244" width="0.1915%" height="15" fill="rgb(206,64,50)" fg:x="36635" fg:w="189"/><text x="37.3641%" y="254.50"></text></g><g><title>codes (pandas\core\groupby\grouper.py:621) (267 samples, 0.27%)</title><rect x="37.1141%" y="212" width="0.2705%" height="15" fill="rgb(234,36,40)" fg:x="36635" fg:w="267"/><text x="37.3641%" y="222.50"></text></g><g><title>_codes_and_uniques (pandas\core\groupby\grouper.py:692) (267 samples, 0.27%)</title><rect x="37.1141%" y="228" width="0.2705%" height="15" fill="rgb(213,64,8)" fg:x="36635" fg:w="267"/><text x="37.3641%" y="238.50"></text></g><g><title>_reverse_indexer (pandas\core\arrays\categorical.py:2281) (192 samples, 0.19%)</title><rect x="37.4393%" y="228" width="0.1945%" height="15" fill="rgb(210,75,36)" fg:x="36956" fg:w="192"/><text x="37.6893%" y="238.50"></text></g><g><title>groupby (pandas\core\indexes\base.py:6376) (240 samples, 0.24%)</title><rect x="37.4393%" y="212" width="0.2431%" height="15" fill="rgb(229,88,21)" fg:x="36956" fg:w="240"/><text x="37.6893%" y="222.50"></text></g><g><title>take (pandas\core\indexes\base.py:1184) (193 samples, 0.20%)</title><rect x="37.7260%" y="244" width="0.1955%" height="15" fill="rgb(252,204,47)" fg:x="37239" fg:w="193"/><text x="37.9760%" y="254.50"></text></g><g><title>take (pandas\core\algorithms.py:1573) (190 samples, 0.19%)</title><rect x="37.7291%" y="260" width="0.1925%" height="15" fill="rgb(208,77,27)" fg:x="37242" fg:w="190"/><text x="37.9791%" y="270.50"></text></g><g><title>_build_decoder_index (buffers.py:199) (807 samples, 0.82%)</title><rect x="37.1050%" y="148" width="0.8176%" height="15" fill="rgb(221,76,26)" fg:x="36626" fg:w="807"/><text x="37.3550%" y="158.50"></text></g><g><title>groups (pandas\core\groupby\groupby.py:666) (807 samples, 0.82%)</title><rect x="37.1050%" y="164" width="0.8176%" height="15" fill="rgb(225,139,18)" fg:x="36626" fg:w="807"/><text x="37.3550%" y="174.50"></text></g><g><title>groups (pandas\core\groupby\ops.py:924) (807 samples, 0.82%)</title><rect x="37.1050%" y="180" width="0.8176%" height="15" fill="rgb(230,137,11)" fg:x="36626" fg:w="807"/><text x="37.3550%" y="190.50"></text></g><g><title>groups (pandas\core\groupby\grouper.py:699) (807 samples, 0.82%)</title><rect x="37.1050%" y="196" width="0.8176%" height="15" fill="rgb(212,28,1)" fg:x="36626" fg:w="807"/><text x="37.3550%" y="206.50"></text></g><g><title>groupby (pandas\core\indexes\base.py:6379) (237 samples, 0.24%)</title><rect x="37.6825%" y="212" width="0.2401%" height="15" fill="rgb(248,164,17)" fg:x="37196" fg:w="237"/><text x="37.9325%" y="222.50"></text></g><g><title>&lt;dictcomp&gt; (pandas\core\indexes\base.py:6379) (225 samples, 0.23%)</title><rect x="37.6946%" y="228" width="0.2279%" height="15" fill="rgb(222,171,42)" fg:x="37208" fg:w="225"/><text x="37.9446%" y="238.50"></text></g><g><title>_amin (numpy\core\_methods.py:45) (424 samples, 0.43%)</title><rect x="38.1971%" y="196" width="0.4295%" height="15" fill="rgb(243,84,45)" fg:x="37704" fg:w="424"/><text x="38.4471%" y="206.50"></text></g><g><title>_bin_edges (scipy\stats\_binned_statistic.py:725) (426 samples, 0.43%)</title><rect x="38.1961%" y="180" width="0.4316%" height="15" fill="rgb(252,49,23)" fg:x="37703" fg:w="426"/><text x="38.4461%" y="190.50"></text></g><g><title>_bin_edges (scipy\stats\_binned_statistic.py:726) (416 samples, 0.42%)</title><rect x="38.6277%" y="180" width="0.4214%" height="15" fill="rgb(215,19,7)" fg:x="38129" fg:w="416"/><text x="38.8777%" y="190.50"></text></g><g><title>_amax (numpy\core\_methods.py:41) (415 samples, 0.42%)</title><rect x="38.6287%" y="196" width="0.4204%" height="15" fill="rgb(238,81,41)" fg:x="38130" fg:w="415"/><text x="38.8787%" y="206.50"></text></g><g><title>binned_statistic_dd (scipy\stats\_binned_statistic.py:583) (845 samples, 0.86%)</title><rect x="38.1961%" y="164" width="0.8561%" height="15" fill="rgb(210,199,37)" fg:x="37703" fg:w="845"/><text x="38.4461%" y="174.50"></text></g><g><title>_bin_numbers (scipy\stats\_binned_statistic.py:771) (308 samples, 0.31%)</title><rect x="39.0643%" y="180" width="0.3120%" height="15" fill="rgb(244,192,49)" fg:x="38560" fg:w="308"/><text x="39.3143%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (scipy\stats\_binned_statistic.py:772) (308 samples, 0.31%)</title><rect x="39.0643%" y="196" width="0.3120%" height="15" fill="rgb(226,211,11)" fg:x="38560" fg:w="308"/><text x="39.3143%" y="206.50"></text></g><g><title>digitize (&lt;__array_function__ internals&gt;:200) (308 samples, 0.31%)</title><rect x="39.0643%" y="212" width="0.3120%" height="15" fill="rgb(236,162,54)" fg:x="38560" fg:w="308"/><text x="39.3143%" y="222.50"></text></g><g><title>digitize (numpy\lib\function_base.py:5614) (308 samples, 0.31%)</title><rect x="39.0643%" y="228" width="0.3120%" height="15" fill="rgb(220,229,9)" fg:x="38560" fg:w="308"/><text x="39.3143%" y="238.50"></text></g><g><title>searchsorted (&lt;__array_function__ internals&gt;:200) (308 samples, 0.31%)</title><rect x="39.0643%" y="244" width="0.3120%" height="15" fill="rgb(250,87,22)" fg:x="38560" fg:w="308"/><text x="39.3143%" y="254.50"></text></g><g><title>searchsorted (numpy\core\fromnumeric.py:1413) (308 samples, 0.31%)</title><rect x="39.0643%" y="260" width="0.3120%" height="15" fill="rgb(239,43,17)" fg:x="38560" fg:w="308"/><text x="39.3143%" y="270.50"></text></g><g><title>_wrapfunc (numpy\core\fromnumeric.py:57) (308 samples, 0.31%)</title><rect x="39.0643%" y="276" width="0.3120%" height="15" fill="rgb(231,177,25)" fg:x="38560" fg:w="308"/><text x="39.3143%" y="286.50"></text></g><g><title>binned_statistic_dd (scipy\stats\_binned_statistic.py:584) (484 samples, 0.49%)</title><rect x="39.0522%" y="164" width="0.4903%" height="15" fill="rgb(219,179,1)" fg:x="38548" fg:w="484"/><text x="39.3022%" y="174.50"></text></g><g><title>_build_decoder_index (buffers.py:204) (1,599 samples, 1.62%)</title><rect x="37.9611%" y="148" width="1.6199%" height="15" fill="rgb(238,219,53)" fg:x="37471" fg:w="1599"/><text x="38.2111%" y="158.50"></text></g><g><title>_unique1d (numpy\lib\arraysetops.py:333) (354 samples, 0.36%)</title><rect x="39.6144%" y="196" width="0.3586%" height="15" fill="rgb(232,167,36)" fg:x="39103" fg:w="354"/><text x="39.8644%" y="206.50"></text></g><g><title>_build_decoder_index (buffers.py:205) (661 samples, 0.67%)</title><rect x="39.5810%" y="148" width="0.6696%" height="15" fill="rgb(244,19,51)" fg:x="39070" fg:w="661"/><text x="39.8310%" y="158.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;:200) (661 samples, 0.67%)</title><rect x="39.5810%" y="164" width="0.6696%" height="15" fill="rgb(224,6,22)" fg:x="39070" fg:w="661"/><text x="39.8310%" y="174.50"></text></g><g><title>unique (numpy\lib\arraysetops.py:274) (660 samples, 0.67%)</title><rect x="39.5820%" y="180" width="0.6686%" height="15" fill="rgb(224,145,5)" fg:x="39071" fg:w="660"/><text x="39.8320%" y="190.50"></text></g><g><title>_build_decoder_index (buffers.py:209) (99 samples, 0.10%)</title><rect x="40.2557%" y="148" width="0.1003%" height="15" fill="rgb(234,130,49)" fg:x="39736" fg:w="99"/><text x="40.5057%" y="158.50"></text></g><g><title>_build_decoder_index (buffers.py:212) (243 samples, 0.25%)</title><rect x="40.3580%" y="148" width="0.2462%" height="15" fill="rgb(254,6,2)" fg:x="39837" fg:w="243"/><text x="40.6080%" y="158.50"></text></g><g><title>get_decoder_targets (buffers.py:180) (7,135 samples, 7.23%)</title><rect x="37.0432%" y="132" width="7.2283%" height="15" fill="rgb(208,96,46)" fg:x="36565" fg:w="7135"/><text x="37.2932%" y="142.50">get_decode..</text></g><g><title>_build_decoder_index (buffers.py:213) (3,620 samples, 3.67%)</title><rect x="40.6042%" y="148" width="3.6673%" height="15" fill="rgb(239,3,39)" fg:x="40080" fg:w="3620"/><text x="40.8542%" y="158.50">_bui..</text></g><g><title>prod (&lt;__array_function__ internals&gt;:180) (105 samples, 0.11%)</title><rect x="47.1082%" y="148" width="0.1064%" height="15" fill="rgb(233,210,1)" fg:x="46500" fg:w="105"/><text x="47.3582%" y="158.50"></text></g><g><title>_wrapreduction (numpy\core\fromnumeric.py:70) (250 samples, 0.25%)</title><rect x="47.5023%" y="180" width="0.2533%" height="15" fill="rgb(244,137,37)" fg:x="46889" fg:w="250"/><text x="47.7523%" y="190.50"></text></g><g><title>_wrapreduction (numpy\core\fromnumeric.py:75) (255 samples, 0.26%)</title><rect x="47.8021%" y="180" width="0.2583%" height="15" fill="rgb(240,136,2)" fg:x="47185" fg:w="255"/><text x="48.0521%" y="190.50"></text></g><g><title>prod (numpy\core\fromnumeric.py:3076) (1,780 samples, 1.80%)</title><rect x="47.2956%" y="164" width="1.8033%" height="15" fill="rgb(239,18,37)" fg:x="46685" fg:w="1780"/><text x="47.5456%" y="174.50">p..</text></g><g><title>_wrapreduction (numpy\core\fromnumeric.py:86) (993 samples, 1.01%)</title><rect x="48.0929%" y="180" width="1.0060%" height="15" fill="rgb(218,185,22)" fg:x="47472" fg:w="993"/><text x="48.3429%" y="190.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;:200) (1,865 samples, 1.89%)</title><rect x="47.2145%" y="148" width="1.8894%" height="15" fill="rgb(225,218,4)" fg:x="46605" fg:w="1865"/><text x="47.4645%" y="158.50">p..</text></g><g><title>get_decoder_targets (buffers.py:186) (4,646 samples, 4.71%)</title><rect x="44.4093%" y="132" width="4.7068%" height="15" fill="rgb(230,182,32)" fg:x="43836" fg:w="4646"/><text x="44.6593%" y="142.50">get_d..</text></g><g><title>get_decoder_targets (buffers.py:189) (2,790 samples, 2.83%)</title><rect x="49.1181%" y="132" width="2.8265%" height="15" fill="rgb(242,56,43)" fg:x="48484" fg:w="2790"/><text x="49.3681%" y="142.50">ge..</text></g><g><title>to_torch (stable_baselines3\common\buffers.py:135) (270 samples, 0.27%)</title><rect x="51.6711%" y="148" width="0.2735%" height="15" fill="rgb(233,99,24)" fg:x="51004" fg:w="270"/><text x="51.9211%" y="158.50"></text></g><g><title>get_decoder_targets (buffers.py:190) (2,813 samples, 2.85%)</title><rect x="51.9446%" y="132" width="2.8498%" height="15" fill="rgb(234,209,42)" fg:x="51274" fg:w="2813"/><text x="52.1946%" y="142.50">ge..</text></g><g><title>to_torch (stable_baselines3\common\buffers.py:135) (228 samples, 0.23%)</title><rect x="54.5634%" y="148" width="0.2310%" height="15" fill="rgb(227,7,12)" fg:x="53859" fg:w="228"/><text x="54.8134%" y="158.50"></text></g><g><title>get_decoder_targets (buffers.py:191) (2,782 samples, 2.82%)</title><rect x="54.7944%" y="132" width="2.8184%" height="15" fill="rgb(245,203,43)" fg:x="54087" fg:w="2782"/><text x="55.0444%" y="142.50">ge..</text></g><g><title>to_torch (stable_baselines3\common\buffers.py:135) (247 samples, 0.25%)</title><rect x="57.3626%" y="148" width="0.2502%" height="15" fill="rgb(238,205,33)" fg:x="56622" fg:w="247"/><text x="57.6126%" y="158.50"></text></g><g><title>get_decoder_targets (buffers.py:192) (1,144 samples, 1.16%)</title><rect x="57.6128%" y="132" width="1.1590%" height="15" fill="rgb(231,56,7)" fg:x="56869" fg:w="1144"/><text x="57.8628%" y="142.50"></text></g><g><title>to_torch (stable_baselines3\common\buffers.py:135) (131 samples, 0.13%)</title><rect x="58.6390%" y="148" width="0.1327%" height="15" fill="rgb(244,186,29)" fg:x="57882" fg:w="131"/><text x="58.8890%" y="158.50"></text></g><g><title>reconstruction_training_step (cemrl.py:126) (22,407 samples, 22.70%)</title><rect x="37.0392%" y="116" width="22.7001%" height="15" fill="rgb(234,111,31)" fg:x="36561" fg:w="22407"/><text x="37.2892%" y="126.50">reconstruction_training_step (cemrl...</text></g><g><title>get_decoder_targets (buffers.py:193) (955 samples, 0.97%)</title><rect x="58.7717%" y="132" width="0.9675%" height="15" fill="rgb(241,149,10)" fg:x="58013" fg:w="955"/><text x="59.0217%" y="142.50"></text></g><g><title>to_torch (stable_baselines3\common\buffers.py:135) (125 samples, 0.13%)</title><rect x="59.6126%" y="148" width="0.1266%" height="15" fill="rgb(249,206,44)" fg:x="58843" fg:w="125"/><text x="59.8626%" y="158.50"></text></g><g><title>encode (networks.py:39) (929 samples, 0.94%)</title><rect x="59.8821%" y="148" width="0.9412%" height="15" fill="rgb(251,153,30)" fg:x="59109" fg:w="929"/><text x="60.1321%" y="158.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (917 samples, 0.93%)</title><rect x="59.8942%" y="164" width="0.9290%" height="15" fill="rgb(239,152,38)" fg:x="59121" fg:w="917"/><text x="60.1442%" y="174.50"></text></g><g><title>forward (torch\nn\modules\rnn.py:998) (862 samples, 0.87%)</title><rect x="59.9500%" y="180" width="0.8733%" height="15" fill="rgb(249,139,47)" fg:x="59176" fg:w="862"/><text x="60.2000%" y="190.50"></text></g><g><title>encode (networks.py:41) (174 samples, 0.18%)</title><rect x="60.8283%" y="148" width="0.1763%" height="15" fill="rgb(244,64,35)" fg:x="60043" fg:w="174"/><text x="61.0783%" y="158.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (168 samples, 0.17%)</title><rect x="60.8344%" y="164" width="0.1702%" height="15" fill="rgb(216,46,15)" fg:x="60049" fg:w="168"/><text x="61.0844%" y="174.50"></text></g><g><title>forward (torch\nn\modules\container.py:217) (164 samples, 0.17%)</title><rect x="60.8384%" y="180" width="0.1661%" height="15" fill="rgb(250,74,19)" fg:x="60053" fg:w="164"/><text x="61.0884%" y="190.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (150 samples, 0.15%)</title><rect x="60.8526%" y="196" width="0.1520%" height="15" fill="rgb(249,42,33)" fg:x="60067" fg:w="150"/><text x="61.1026%" y="206.50"></text></g><g><title>forward (torch\nn\modules\linear.py:114) (127 samples, 0.13%)</title><rect x="60.8759%" y="212" width="0.1287%" height="15" fill="rgb(242,149,17)" fg:x="60090" fg:w="127"/><text x="61.1259%" y="222.50"></text></g><g><title>encode (networks.py:42) (132 samples, 0.13%)</title><rect x="61.0046%" y="148" width="0.1337%" height="15" fill="rgb(244,29,21)" fg:x="60217" fg:w="132"/><text x="61.2546%" y="158.50"></text></g><g><title>__init__ (torch\distributions\distribution.py:60) (144 samples, 0.15%)</title><rect x="61.2670%" y="180" width="0.1459%" height="15" fill="rgb(220,130,37)" fg:x="60476" fg:w="144"/><text x="61.5170%" y="190.50"></text></g><g><title>check (torch\distributions\constraints.py:406) (143 samples, 0.14%)</title><rect x="61.2680%" y="196" width="0.1449%" height="15" fill="rgb(211,67,2)" fg:x="60477" fg:w="143"/><text x="61.5180%" y="206.50"></text></g><g><title>encode (networks.py:46) (252 samples, 0.26%)</title><rect x="61.2102%" y="148" width="0.2553%" height="15" fill="rgb(235,68,52)" fg:x="60420" fg:w="252"/><text x="61.4602%" y="158.50"></text></g><g><title>__init__ (torch\distributions\categorical.py:66) (213 samples, 0.22%)</title><rect x="61.2497%" y="164" width="0.2158%" height="15" fill="rgb(246,142,3)" fg:x="60459" fg:w="213"/><text x="61.4997%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (networks.py:47) (174 samples, 0.18%)</title><rect x="61.4686%" y="164" width="0.1763%" height="15" fill="rgb(241,25,7)" fg:x="60675" fg:w="174"/><text x="61.7186%" y="174.50"></text></g><g><title>__init__ (torch\distributions\normal.py:56) (147 samples, 0.15%)</title><rect x="61.4959%" y="180" width="0.1489%" height="15" fill="rgb(242,119,39)" fg:x="60702" fg:w="147"/><text x="61.7459%" y="190.50"></text></g><g><title>reconstruction_training_step (cemrl.py:131) (1,836 samples, 1.86%)</title><rect x="59.8122%" y="116" width="1.8600%" height="15" fill="rgb(241,98,45)" fg:x="59040" fg:w="1836"/><text x="60.0622%" y="126.50">r..</text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (1,812 samples, 1.84%)</title><rect x="59.8365%" y="132" width="1.8357%" height="15" fill="rgb(254,28,30)" fg:x="59064" fg:w="1812"/><text x="60.0865%" y="142.50">d..</text></g><g><title>encode (networks.py:47) (204 samples, 0.21%)</title><rect x="61.4655%" y="148" width="0.2067%" height="15" fill="rgb(241,142,54)" fg:x="60672" fg:w="204"/><text x="61.7155%" y="158.50"></text></g><g><title>reconstruction_training_step (cemrl.py:147) (247 samples, 0.25%)</title><rect x="61.7360%" y="116" width="0.2502%" height="15" fill="rgb(222,85,15)" fg:x="60939" fg:w="247"/><text x="61.9860%" y="126.50"></text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (234 samples, 0.24%)</title><rect x="61.7492%" y="132" width="0.2371%" height="15" fill="rgb(210,85,47)" fg:x="60952" fg:w="234"/><text x="61.9992%" y="142.50"></text></g><g><title>relu (torch\nn\functional.py:1457) (157 samples, 0.16%)</title><rect x="62.3398%" y="292" width="0.1591%" height="15" fill="rgb(224,206,25)" fg:x="61535" fg:w="157"/><text x="62.5898%" y="302.50"></text></g><g><title>forward (torch\nn\modules\activation.py:103) (165 samples, 0.17%)</title><rect x="62.3327%" y="276" width="0.1672%" height="15" fill="rgb(243,201,19)" fg:x="61528" fg:w="165"/><text x="62.5827%" y="286.50"></text></g><g><title>forward (networks.py:91) (1,376 samples, 1.39%)</title><rect x="62.0886%" y="212" width="1.3940%" height="15" fill="rgb(236,59,4)" fg:x="61287" fg:w="1376"/><text x="62.3386%" y="222.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (1,245 samples, 1.26%)</title><rect x="62.2213%" y="228" width="1.2613%" height="15" fill="rgb(254,179,45)" fg:x="61418" fg:w="1245"/><text x="62.4713%" y="238.50"></text></g><g><title>forward (torch\nn\modules\container.py:217) (1,234 samples, 1.25%)</title><rect x="62.2324%" y="244" width="1.2501%" height="15" fill="rgb(226,14,10)" fg:x="61429" fg:w="1234"/><text x="62.4824%" y="254.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (1,144 samples, 1.16%)</title><rect x="62.3236%" y="260" width="1.1590%" height="15" fill="rgb(244,27,41)" fg:x="61519" fg:w="1144"/><text x="62.5736%" y="270.50"></text></g><g><title>forward (torch\nn\modules\linear.py:114) (970 samples, 0.98%)</title><rect x="62.4999%" y="276" width="0.9827%" height="15" fill="rgb(235,35,32)" fg:x="61693" fg:w="970"/><text x="62.7499%" y="286.50"></text></g><g><title>forward (torch\nn\modules\activation.py:103) (144 samples, 0.15%)</title><rect x="63.7206%" y="276" width="0.1459%" height="15" fill="rgb(218,68,31)" fg:x="62898" fg:w="144"/><text x="63.9706%" y="286.50"></text></g><g><title>relu (torch\nn\functional.py:1457) (133 samples, 0.13%)</title><rect x="63.7318%" y="292" width="0.1347%" height="15" fill="rgb(207,120,37)" fg:x="62909" fg:w="133"/><text x="63.9818%" y="302.50"></text></g><g><title>forward (networks.py:49) (2,753 samples, 2.79%)</title><rect x="62.0561%" y="164" width="2.7890%" height="15" fill="rgb(227,98,0)" fg:x="61255" fg:w="2753"/><text x="62.3061%" y="174.50">fo..</text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (2,739 samples, 2.77%)</title><rect x="62.0703%" y="180" width="2.7748%" height="15" fill="rgb(207,7,3)" fg:x="61269" fg:w="2739"/><text x="62.3203%" y="190.50">_c..</text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (2,722 samples, 2.76%)</title><rect x="62.0876%" y="196" width="2.7576%" height="15" fill="rgb(206,98,19)" fg:x="61286" fg:w="2722"/><text x="62.3376%" y="206.50">de..</text></g><g><title>forward (networks.py:93) (1,345 samples, 1.36%)</title><rect x="63.4826%" y="212" width="1.3626%" height="15" fill="rgb(217,5,26)" fg:x="62663" fg:w="1345"/><text x="63.7326%" y="222.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (1,205 samples, 1.22%)</title><rect x="63.6244%" y="228" width="1.2208%" height="15" fill="rgb(235,190,38)" fg:x="62803" fg:w="1205"/><text x="63.8744%" y="238.50"></text></g><g><title>forward (torch\nn\modules\container.py:217) (1,190 samples, 1.21%)</title><rect x="63.6396%" y="244" width="1.2056%" height="15" fill="rgb(247,86,24)" fg:x="62818" fg:w="1190"/><text x="63.8896%" y="254.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (1,112 samples, 1.13%)</title><rect x="63.7186%" y="260" width="1.1265%" height="15" fill="rgb(205,101,16)" fg:x="62896" fg:w="1112"/><text x="63.9686%" y="270.50"></text></g><g><title>forward (torch\nn\modules\linear.py:114) (966 samples, 0.98%)</title><rect x="63.8665%" y="276" width="0.9786%" height="15" fill="rgb(246,168,33)" fg:x="63042" fg:w="966"/><text x="64.1165%" y="286.50"></text></g><g><title>reconstruction_training_step (cemrl.py:150) (2,853 samples, 2.89%)</title><rect x="62.0237%" y="116" width="2.8903%" height="15" fill="rgb(231,114,1)" fg:x="61223" fg:w="2853"/><text x="62.2737%" y="126.50">re..</text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (2,840 samples, 2.88%)</title><rect x="62.0369%" y="132" width="2.8771%" height="15" fill="rgb(207,184,53)" fg:x="61236" fg:w="2840"/><text x="62.2869%" y="142.50">_c..</text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (2,836 samples, 2.87%)</title><rect x="62.0409%" y="148" width="2.8731%" height="15" fill="rgb(224,95,51)" fg:x="61240" fg:w="2836"/><text x="62.2909%" y="158.50">de..</text></g><g><title>reconstruction_training_step (cemrl.py:154) (7,406 samples, 7.50%)</title><rect x="64.9140%" y="116" width="7.5029%" height="15" fill="rgb(212,188,45)" fg:x="64076" fg:w="7406"/><text x="65.1640%" y="126.50">reconstruc..</text></g><g><title>reconstruction_training_step (cemrl.py:155) (346 samples, 0.35%)</title><rect x="72.4169%" y="116" width="0.3505%" height="15" fill="rgb(223,154,38)" fg:x="71482" fg:w="346"/><text x="72.6669%" y="126.50"></text></g><g><title>reconstruction_training_step (cemrl.py:157) (154 samples, 0.16%)</title><rect x="72.7674%" y="116" width="0.1560%" height="15" fill="rgb(251,22,52)" fg:x="71828" fg:w="154"/><text x="73.0174%" y="126.50"></text></g><g><title>reconstruction_training_step (cemrl.py:172) (179 samples, 0.18%)</title><rect x="73.2294%" y="116" width="0.1813%" height="15" fill="rgb(229,209,22)" fg:x="72284" fg:w="179"/><text x="73.4794%" y="126.50"></text></g><g><title>__init__ (torch\distributions\normal.py:56) (131 samples, 0.13%)</title><rect x="73.2780%" y="132" width="0.1327%" height="15" fill="rgb(234,138,34)" fg:x="72332" fg:w="131"/><text x="73.5280%" y="142.50"></text></g><g><title>reconstruction_training_step (cemrl.py:173) (216 samples, 0.22%)</title><rect x="73.4107%" y="116" width="0.2188%" height="15" fill="rgb(212,95,11)" fg:x="72463" fg:w="216"/><text x="73.6607%" y="126.50"></text></g><g><title>kl_divergence (torch\distributions\kl.py:172) (154 samples, 0.16%)</title><rect x="73.4735%" y="132" width="0.1560%" height="15" fill="rgb(240,179,47)" fg:x="72525" fg:w="154"/><text x="73.7235%" y="142.50"></text></g><g><title>__init__ (torch\distributions\distribution.py:60) (142 samples, 0.14%)</title><rect x="73.7076%" y="148" width="0.1439%" height="15" fill="rgb(240,163,11)" fg:x="72756" fg:w="142"/><text x="73.9576%" y="158.50"></text></g><g><title>check (torch\distributions\constraints.py:406) (141 samples, 0.14%)</title><rect x="73.7086%" y="164" width="0.1428%" height="15" fill="rgb(236,37,12)" fg:x="72757" fg:w="141"/><text x="73.9586%" y="174.50"></text></g><g><title>reconstruction_training_step (cemrl.py:177) (244 samples, 0.25%)</title><rect x="73.6549%" y="116" width="0.2472%" height="15" fill="rgb(232,164,16)" fg:x="72704" fg:w="244"/><text x="73.9049%" y="126.50"></text></g><g><title>__init__ (torch\distributions\categorical.py:66) (206 samples, 0.21%)</title><rect x="73.6934%" y="132" width="0.2087%" height="15" fill="rgb(244,205,15)" fg:x="72742" fg:w="206"/><text x="73.9434%" y="142.50"></text></g><g><title>__get__ (torch\distributions\utils.py:112) (107 samples, 0.11%)</title><rect x="73.9456%" y="164" width="0.1084%" height="15" fill="rgb(223,117,47)" fg:x="72991" fg:w="107"/><text x="74.1956%" y="174.50"></text></g><g><title>logits (torch\distributions\categorical.py:92) (107 samples, 0.11%)</title><rect x="73.9456%" y="180" width="0.1084%" height="15" fill="rgb(244,107,35)" fg:x="72991" fg:w="107"/><text x="74.1956%" y="190.50"></text></g><g><title>_kl_categorical_categorical (torch\distributions\kl.py:219) (145 samples, 0.15%)</title><rect x="73.9092%" y="148" width="0.1469%" height="15" fill="rgb(205,140,8)" fg:x="72955" fg:w="145"/><text x="74.1592%" y="158.50"></text></g><g><title>reconstruction_training_step (cemrl.py:178) (261 samples, 0.26%)</title><rect x="73.9021%" y="116" width="0.2644%" height="15" fill="rgb(228,84,46)" fg:x="72948" fg:w="261"/><text x="74.1521%" y="126.50"></text></g><g><title>kl_divergence (torch\distributions\kl.py:172) (260 samples, 0.26%)</title><rect x="73.9031%" y="132" width="0.2634%" height="15" fill="rgb(254,188,9)" fg:x="72949" fg:w="260"/><text x="74.1531%" y="142.50"></text></g><g><title>reconstruction_training_step (cemrl.py:183) (125 samples, 0.13%)</title><rect x="74.1695%" y="116" width="0.1266%" height="15" fill="rgb(206,112,54)" fg:x="73212" fg:w="125"/><text x="74.4195%" y="126.50"></text></g><g><title>reconstruction_training_step (cemrl.py:187) (158 samples, 0.16%)</title><rect x="74.3114%" y="116" width="0.1601%" height="15" fill="rgb(216,84,49)" fg:x="73352" fg:w="158"/><text x="74.5614%" y="126.50"></text></g><g><title>backward (torch\_tensor.py:487) (110 samples, 0.11%)</title><rect x="74.4755%" y="132" width="0.1114%" height="15" fill="rgb(214,194,35)" fg:x="73514" fg:w="110"/><text x="74.7255%" y="142.50"></text></g><g><title>reconstruction_training_step (cemrl.py:190) (141 samples, 0.14%)</title><rect x="74.4714%" y="116" width="0.1428%" height="15" fill="rgb(249,28,3)" fg:x="73510" fg:w="141"/><text x="74.7214%" y="126.50"></text></g><g><title>unscale_ (torch\cuda\amp\grad_scaler.py:284) (168 samples, 0.17%)</title><rect x="74.7004%" y="148" width="0.1702%" height="15" fill="rgb(222,56,52)" fg:x="73736" fg:w="168"/><text x="74.9504%" y="158.50"></text></g><g><title>step (torch\cuda\amp\grad_scaler.py:366) (249 samples, 0.25%)</title><rect x="74.6203%" y="132" width="0.2523%" height="15" fill="rgb(245,217,50)" fg:x="73657" fg:w="249"/><text x="74.8703%" y="142.50"></text></g><g><title>_maybe_opt_step (torch\cuda\amp\grad_scaler.py:289) (15,199 samples, 15.40%)</title><rect x="74.8746%" y="148" width="15.3978%" height="15" fill="rgb(213,201,24)" fg:x="73908" fg:w="15199"/><text x="75.1246%" y="158.50">_maybe_opt_step (torch\c..</text></g><g><title>&lt;genexpr&gt; (torch\cuda\amp\grad_scaler.py:289) (15,193 samples, 15.39%)</title><rect x="74.8807%" y="164" width="15.3917%" height="15" fill="rgb(248,116,28)" fg:x="73914" fg:w="15193"/><text x="75.1307%" y="174.50">&lt;genexpr&gt; (torch\cuda\am..</text></g><g><title>__enter__ (torch\autograd\profiler.py:492) (246 samples, 0.25%)</title><rect x="90.2896%" y="180" width="0.2492%" height="15" fill="rgb(219,72,43)" fg:x="89124" fg:w="246"/><text x="90.5396%" y="190.50"></text></g><g><title>__call__ (torch\_ops.py:502) (238 samples, 0.24%)</title><rect x="90.2977%" y="196" width="0.2411%" height="15" fill="rgb(209,138,14)" fg:x="89132" fg:w="238"/><text x="90.5477%" y="206.50"></text></g><g><title>wrapper (torch\optim\optimizer.py:269) (274 samples, 0.28%)</title><rect x="90.2775%" y="164" width="0.2776%" height="15" fill="rgb(222,18,33)" fg:x="89112" fg:w="274"/><text x="90.5275%" y="174.50"></text></g><g><title>step (torch\optim\adamw.py:160) (166 samples, 0.17%)</title><rect x="90.6584%" y="196" width="0.1682%" height="15" fill="rgb(213,199,7)" fg:x="89488" fg:w="166"/><text x="90.9084%" y="206.50"></text></g><g><title>_multi_tensor_adamw (torch\optim\adamw.py:493) (206 samples, 0.21%)</title><rect x="91.1021%" y="228" width="0.2087%" height="15" fill="rgb(250,110,10)" fg:x="89926" fg:w="206"/><text x="91.3521%" y="238.50"></text></g><g><title>_multi_tensor_adamw (torch\optim\adamw.py:564) (133 samples, 0.13%)</title><rect x="91.6127%" y="228" width="0.1347%" height="15" fill="rgb(248,123,6)" fg:x="90430" fg:w="133"/><text x="91.8627%" y="238.50"></text></g><g><title>_multi_tensor_adamw (torch\optim\adamw.py:566) (110 samples, 0.11%)</title><rect x="91.7799%" y="228" width="0.1114%" height="15" fill="rgb(206,91,31)" fg:x="90595" fg:w="110"/><text x="92.0299%" y="238.50"></text></g><g><title>wrapper (torch\optim\optimizer.py:280) (1,344 samples, 1.36%)</title><rect x="90.5723%" y="164" width="1.3616%" height="15" fill="rgb(211,154,13)" fg:x="89403" fg:w="1344"/><text x="90.8223%" y="174.50"></text></g><g><title>_use_grad (torch\optim\optimizer.py:33) (1,323 samples, 1.34%)</title><rect x="90.5936%" y="180" width="1.3403%" height="15" fill="rgb(225,148,7)" fg:x="89424" fg:w="1323"/><text x="90.8436%" y="190.50"></text></g><g><title>step (torch\optim\adamw.py:171) (1,093 samples, 1.11%)</title><rect x="90.8266%" y="196" width="1.1073%" height="15" fill="rgb(220,160,43)" fg:x="89654" fg:w="1093"/><text x="91.0766%" y="206.50"></text></g><g><title>adamw (torch\optim\adamw.py:321) (1,061 samples, 1.07%)</title><rect x="90.8590%" y="212" width="1.0749%" height="15" fill="rgb(213,52,39)" fg:x="89686" fg:w="1061"/><text x="91.1090%" y="222.50"></text></g><g><title>step (torch\cuda\amp\grad_scaler.py:370) (16,843 samples, 17.06%)</title><rect x="74.8736%" y="132" width="17.0633%" height="15" fill="rgb(243,137,7)" fg:x="73907" fg:w="16843"/><text x="75.1236%" y="142.50">step (torch\cuda\amp\grad_..</text></g><g><title>_maybe_opt_step (torch\cuda\amp\grad_scaler.py:290) (1,643 samples, 1.66%)</title><rect x="90.2724%" y="148" width="1.6645%" height="15" fill="rgb(230,79,13)" fg:x="89107" fg:w="1643"/><text x="90.5224%" y="158.50"></text></g><g><title>reconstruction_training_step (cemrl.py:193) (17,100 samples, 17.32%)</title><rect x="74.6143%" y="116" width="17.3236%" height="15" fill="rgb(247,105,23)" fg:x="73651" fg:w="17100"/><text x="74.8643%" y="126.50">reconstruction_training_ste..</text></g><g><title>train (cemrl.py:104) (58,770 samples, 59.54%)</title><rect x="32.5745%" y="100" width="59.5386%" height="15" fill="rgb(223,179,41)" fg:x="32154" fg:w="58770"/><text x="32.8245%" y="110.50">train (cemrl.py:104)</text></g><g><title>valid_indices (buffers.py:108) (114 samples, 0.12%)</title><rect x="92.1578%" y="148" width="0.1155%" height="15" fill="rgb(218,9,34)" fg:x="90968" fg:w="114"/><text x="92.4078%" y="158.50"></text></g><g><title>sample (buffers.py:113) (291 samples, 0.29%)</title><rect x="92.1243%" y="132" width="0.2948%" height="15" fill="rgb(222,106,8)" fg:x="90935" fg:w="291"/><text x="92.3743%" y="142.50"></text></g><g><title>valid_indices (buffers.py:109) (144 samples, 0.15%)</title><rect x="92.2732%" y="148" width="0.1459%" height="15" fill="rgb(211,220,0)" fg:x="91082" fg:w="144"/><text x="92.5232%" y="158.50"></text></g><g><title>get_encoder_context (buffers.py:154) (137 samples, 0.14%)</title><rect x="92.7210%" y="148" width="0.1388%" height="15" fill="rgb(229,52,16)" fg:x="91524" fg:w="137"/><text x="92.9710%" y="158.50"></text></g><g><title>get_encoder_context (buffers.py:155) (127 samples, 0.13%)</title><rect x="92.8598%" y="148" width="0.1287%" height="15" fill="rgb(212,155,18)" fg:x="91661" fg:w="127"/><text x="93.1098%" y="158.50"></text></g><g><title>sample (buffers.py:114) (641 samples, 0.65%)</title><rect x="92.4191%" y="132" width="0.6494%" height="15" fill="rgb(242,21,14)" fg:x="91226" fg:w="641"/><text x="92.6691%" y="142.50"></text></g><g><title>encode (networks.py:39) (193 samples, 0.20%)</title><rect x="93.0807%" y="212" width="0.1955%" height="15" fill="rgb(222,19,48)" fg:x="91879" fg:w="193"/><text x="93.3307%" y="222.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (191 samples, 0.19%)</title><rect x="93.0827%" y="228" width="0.1935%" height="15" fill="rgb(232,45,27)" fg:x="91881" fg:w="191"/><text x="93.3327%" y="238.50"></text></g><g><title>forward (torch\nn\modules\rnn.py:998) (187 samples, 0.19%)</title><rect x="93.0867%" y="244" width="0.1894%" height="15" fill="rgb(249,103,42)" fg:x="91885" fg:w="187"/><text x="93.3367%" y="254.50"></text></g><g><title>forward (networks.py:30) (381 samples, 0.39%)</title><rect x="93.0726%" y="180" width="0.3860%" height="15" fill="rgb(246,81,33)" fg:x="91871" fg:w="381"/><text x="93.3226%" y="190.50"></text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (380 samples, 0.38%)</title><rect x="93.0736%" y="196" width="0.3850%" height="15" fill="rgb(252,33,42)" fg:x="91872" fg:w="380"/><text x="93.3236%" y="206.50"></text></g><g><title>sample (buffers.py:116) (427 samples, 0.43%)</title><rect x="93.0716%" y="132" width="0.4326%" height="15" fill="rgb(209,212,41)" fg:x="91870" fg:w="427"/><text x="93.3216%" y="142.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (426 samples, 0.43%)</title><rect x="93.0726%" y="148" width="0.4316%" height="15" fill="rgb(207,154,6)" fg:x="91871" fg:w="426"/><text x="93.3226%" y="158.50"></text></g><g><title>decorate_autocast (torch\amp\autocast_mode.py:14) (426 samples, 0.43%)</title><rect x="93.0726%" y="164" width="0.4316%" height="15" fill="rgb(223,64,47)" fg:x="91871" fg:w="426"/><text x="93.3226%" y="174.50"></text></g><g><title>train (stable_baselines3\sac\sac.py:215) (1,446 samples, 1.46%)</title><rect x="92.1193%" y="116" width="1.4649%" height="15" fill="rgb(211,161,38)" fg:x="90930" fg:w="1446"/><text x="92.3693%" y="126.50"></text></g><g><title>train (stable_baselines3\sac\sac.py:222) (250 samples, 0.25%)</title><rect x="93.5842%" y="116" width="0.2533%" height="15" fill="rgb(219,138,40)" fg:x="92376" fg:w="250"/><text x="93.8342%" y="126.50"></text></g><g><title>action_log_prob (stable_baselines3\sac\policies.py:175) (159 samples, 0.16%)</title><rect x="93.6764%" y="132" width="0.1611%" height="15" fill="rgb(241,228,46)" fg:x="92467" fg:w="159"/><text x="93.9264%" y="142.50"></text></g><g><title>action_log_prob (stable_baselines3\sac\policies.py:173) (103 samples, 0.10%)</title><rect x="94.0005%" y="132" width="0.1043%" height="15" fill="rgb(223,209,38)" fg:x="92787" fg:w="103"/><text x="94.2505%" y="142.50"></text></g><g><title>train (stable_baselines3\sac\sac.py:247) (232 samples, 0.24%)</title><rect x="93.9995%" y="116" width="0.2350%" height="15" fill="rgb(236,164,45)" fg:x="92786" fg:w="232"/><text x="94.2495%" y="126.50"></text></g><g><title>action_log_prob (stable_baselines3\sac\policies.py:175) (128 samples, 0.13%)</title><rect x="94.1049%" y="132" width="0.1297%" height="15" fill="rgb(231,15,5)" fg:x="92890" fg:w="128"/><text x="94.3549%" y="142.50"></text></g><g><title>train (stable_baselines3\sac\sac.py:249) (117 samples, 0.12%)</title><rect x="94.2346%" y="116" width="0.1185%" height="15" fill="rgb(252,35,15)" fg:x="93018" fg:w="117"/><text x="94.4846%" y="126.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (109 samples, 0.11%)</title><rect x="94.2427%" y="132" width="0.1104%" height="15" fill="rgb(248,181,18)" fg:x="93026" fg:w="109"/><text x="94.4927%" y="142.50"></text></g><g><title>train (stable_baselines3\sac\sac.py:258) (136 samples, 0.14%)</title><rect x="94.3886%" y="116" width="0.1378%" height="15" fill="rgb(233,39,42)" fg:x="93170" fg:w="136"/><text x="94.6386%" y="126.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (135 samples, 0.14%)</title><rect x="94.3896%" y="132" width="0.1368%" height="15" fill="rgb(238,110,33)" fg:x="93171" fg:w="135"/><text x="94.6396%" y="142.50"></text></g><g><title>forward (stable_baselines3\common\policies.py:937) (115 samples, 0.12%)</title><rect x="94.4098%" y="148" width="0.1165%" height="15" fill="rgb(233,195,10)" fg:x="93191" fg:w="115"/><text x="94.6598%" y="158.50"></text></g><g><title>&lt;genexpr&gt; (stable_baselines3\common\policies.py:937) (115 samples, 0.12%)</title><rect x="94.4098%" y="164" width="0.1165%" height="15" fill="rgb(254,105,3)" fg:x="93191" fg:w="115"/><text x="94.6598%" y="174.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (109 samples, 0.11%)</title><rect x="94.4159%" y="180" width="0.1104%" height="15" fill="rgb(221,225,9)" fg:x="93197" fg:w="109"/><text x="94.6659%" y="190.50"></text></g><g><title>forward (torch\nn\modules\container.py:217) (106 samples, 0.11%)</title><rect x="94.4189%" y="196" width="0.1074%" height="15" fill="rgb(224,227,45)" fg:x="93200" fg:w="106"/><text x="94.6689%" y="206.50"></text></g><g><title>train (stable_baselines3\sac\sac.py:273) (118 samples, 0.12%)</title><rect x="94.6925%" y="116" width="0.1195%" height="15" fill="rgb(229,198,43)" fg:x="93470" fg:w="118"/><text x="94.9425%" y="126.50"></text></g><g><title>_call_impl (torch\nn\modules\module.py:1501) (113 samples, 0.11%)</title><rect x="94.6975%" y="132" width="0.1145%" height="15" fill="rgb(206,209,35)" fg:x="93475" fg:w="113"/><text x="94.9475%" y="142.50"></text></g><g><title>polyak_update (stable_baselines3\common\utils.py:469) (190 samples, 0.19%)</title><rect x="94.9670%" y="132" width="0.1925%" height="15" fill="rgb(245,195,53)" fg:x="93741" fg:w="190"/><text x="95.2170%" y="142.50"></text></g><g><title>zip_strict (stable_baselines3\common\utils.py:442) (162 samples, 0.16%)</title><rect x="94.9954%" y="148" width="0.1641%" height="15" fill="rgb(240,92,26)" fg:x="93769" fg:w="162"/><text x="95.2454%" y="158.50"></text></g><g><title>train (stable_baselines3\sac\sac.py:285) (317 samples, 0.32%)</title><rect x="94.9660%" y="116" width="0.3211%" height="15" fill="rgb(207,40,23)" fg:x="93740" fg:w="317"/><text x="95.2160%" y="126.50"></text></g><g><title>&lt;module&gt; (cli.py:195) (94,064 samples, 95.29%)</title><rect x="0.0000%" y="68" width="95.2942%" height="15" fill="rgb(223,111,35)" fg:x="0" fg:w="94064"/><text x="0.2500%" y="78.50">&lt;module&gt; (cli.py:195)</text></g><g><title>learn (stable_baselines3\common\off_policy_algorithm.py:331) (61,910 samples, 62.72%)</title><rect x="32.5745%" y="84" width="62.7197%" height="15" fill="rgb(229,147,28)" fg:x="32154" fg:w="61910"/><text x="32.8245%" y="94.50">learn (stable_baselines3\common\off_policy_algorithm.py:331)</text></g><g><title>train (cemrl.py:105) (3,140 samples, 3.18%)</title><rect x="92.1132%" y="100" width="3.1811%" height="15" fill="rgb(211,29,28)" fg:x="90924" fg:w="3140"/><text x="92.3632%" y="110.50">tra..</text></g><g><title>replace (dataclasses.py:1446) (229 samples, 0.23%)</title><rect x="95.7005%" y="244" width="0.2320%" height="15" fill="rgb(228,72,33)" fg:x="94465" fg:w="229"/><text x="95.9505%" y="254.50"></text></g><g><title>&lt;genexpr&gt; (rich\progress.py:1556) (743 samples, 0.75%)</title><rect x="95.3834%" y="212" width="0.7527%" height="15" fill="rgb(205,214,31)" fg:x="94152" fg:w="743"/><text x="95.6334%" y="222.50"></text></g><g><title>copy (rich\table.py:116) (717 samples, 0.73%)</title><rect x="95.4097%" y="228" width="0.7264%" height="15" fill="rgb(224,111,15)" fg:x="94178" fg:w="717"/><text x="95.6597%" y="238.50"></text></g><g><title>replace (dataclasses.py:1453) (201 samples, 0.20%)</title><rect x="95.9325%" y="244" width="0.2036%" height="15" fill="rgb(253,21,26)" fg:x="94694" fg:w="201"/><text x="96.1825%" y="254.50"></text></g><g><title>&lt;genexpr&gt; (rich\progress.py:1558) (179 samples, 0.18%)</title><rect x="96.1361%" y="212" width="0.1813%" height="15" fill="rgb(245,139,43)" fg:x="94895" fg:w="179"/><text x="96.3861%" y="222.50"></text></g><g><title>&lt;genexpr&gt; (rich\progress.py:1560) (150 samples, 0.15%)</title><rect x="96.3195%" y="212" width="0.1520%" height="15" fill="rgb(252,170,7)" fg:x="95076" fg:w="150"/><text x="96.5695%" y="222.50"></text></g><g><title>get_table_column (rich\progress.py:503) (111 samples, 0.11%)</title><rect x="96.3590%" y="228" width="0.1125%" height="15" fill="rgb(231,118,14)" fg:x="95115" fg:w="111"/><text x="96.6090%" y="238.50"></text></g><g><title>grid (rich\table.py:272) (215 samples, 0.22%)</title><rect x="96.4988%" y="212" width="0.2178%" height="15" fill="rgb(238,83,0)" fg:x="95253" fg:w="215"/><text x="96.7488%" y="222.50"></text></g><g><title>make_tasks_table (rich\progress.py:1564) (1,358 samples, 1.38%)</title><rect x="95.3439%" y="196" width="1.3758%" height="15" fill="rgb(221,39,39)" fg:x="94113" fg:w="1358"/><text x="95.5939%" y="206.50"></text></g><g><title>__call__ (rich\progress.py:524) (292 samples, 0.30%)</title><rect x="96.7774%" y="228" width="0.2958%" height="15" fill="rgb(222,119,46)" fg:x="95528" fg:w="292"/><text x="97.0274%" y="238.50"></text></g><g><title>&lt;genexpr&gt; (rich\progress.py:1569) (346 samples, 0.35%)</title><rect x="96.7440%" y="212" width="0.3505%" height="15" fill="rgb(222,165,49)" fg:x="95495" fg:w="346"/><text x="96.9940%" y="222.50"></text></g><g><title>&lt;genexpr&gt; (rich\progress.py:1571) (106 samples, 0.11%)</title><rect x="97.0945%" y="212" width="0.1074%" height="15" fill="rgb(219,113,52)" fg:x="95841" fg:w="106"/><text x="97.3445%" y="222.50"></text></g><g><title>make_tasks_table (rich\progress.py:1568) (509 samples, 0.52%)</title><rect x="96.7298%" y="196" width="0.5157%" height="15" fill="rgb(214,7,15)" fg:x="95481" fg:w="509"/><text x="96.9798%" y="206.50"></text></g><g><title>get_renderable (rich\live.py:98) (1,926 samples, 1.95%)</title><rect x="95.3186%" y="148" width="1.9512%" height="15" fill="rgb(235,32,4)" fg:x="94088" fg:w="1926"/><text x="95.5686%" y="158.50">g..</text></g><g><title>get_renderable (rich\progress.py:1539) (1,924 samples, 1.95%)</title><rect x="95.3206%" y="164" width="1.9492%" height="15" fill="rgb(238,90,54)" fg:x="94090" fg:w="1924"/><text x="95.5706%" y="174.50">g..</text></g><g><title>get_renderables (rich\progress.py:1544) (1,912 samples, 1.94%)</title><rect x="95.3327%" y="180" width="1.9370%" height="15" fill="rgb(213,208,19)" fg:x="94102" fg:w="1912"/><text x="95.5827%" y="190.50">g..</text></g><g><title>renderable (rich\live.py:203) (1,931 samples, 1.96%)</title><rect x="95.3155%" y="132" width="1.9563%" height="15" fill="rgb(233,156,4)" fg:x="94085" fg:w="1931"/><text x="95.5655%" y="142.50">r..</text></g><g><title>refresh (rich\live.py:221) (1,957 samples, 1.98%)</title><rect x="95.3125%" y="116" width="1.9826%" height="15" fill="rgb(207,194,5)" fg:x="94082" fg:w="1957"/><text x="95.5625%" y="126.50">r..</text></g><g><title>_sendall_with_error_handle (wandb\sdk\lib\sock_client.py:130) (124 samples, 0.13%)</title><rect x="97.5129%" y="340" width="0.1256%" height="15" fill="rgb(206,111,30)" fg:x="96254" fg:w="124"/><text x="97.7629%" y="350.50"></text></g><g><title>_check_buffer (rich\console.py:2009) (280 samples, 0.28%)</title><rect x="97.3579%" y="164" width="0.2837%" height="15" fill="rgb(243,70,54)" fg:x="96101" fg:w="280"/><text x="97.6079%" y="174.50"></text></g><g><title>write (wandb\sdk\lib\redirect.py:643) (238 samples, 0.24%)</title><rect x="97.4004%" y="180" width="0.2411%" height="15" fill="rgb(242,28,8)" fg:x="96143" fg:w="238"/><text x="97.6504%" y="190.50"></text></g><g><title>&lt;lambda&gt; (wandb\sdk\wandb_run.py:2079) (238 samples, 0.24%)</title><rect x="97.4004%" y="196" width="0.2411%" height="15" fill="rgb(219,106,18)" fg:x="96143" fg:w="238"/><text x="97.6504%" y="206.50"></text></g><g><title>wrapper_fn (wandb\sdk\wandb_run.py:342) (236 samples, 0.24%)</title><rect x="97.4025%" y="212" width="0.2391%" height="15" fill="rgb(244,222,10)" fg:x="96145" fg:w="236"/><text x="97.6525%" y="222.50"></text></g><g><title>_console_raw_callback (wandb\sdk\wandb_run.py:1425) (230 samples, 0.23%)</title><rect x="97.4085%" y="228" width="0.2330%" height="15" fill="rgb(236,179,52)" fg:x="96151" fg:w="230"/><text x="97.6585%" y="238.50"></text></g><g><title>publish_output_raw (wandb\sdk\interface\interface.py:658) (175 samples, 0.18%)</title><rect x="97.4643%" y="244" width="0.1773%" height="15" fill="rgb(213,23,39)" fg:x="96206" fg:w="175"/><text x="97.7143%" y="254.50"></text></g><g><title>_publish_output_raw (wandb\sdk\interface\interface_shared.py:79) (162 samples, 0.16%)</title><rect x="97.4774%" y="260" width="0.1641%" height="15" fill="rgb(238,48,10)" fg:x="96219" fg:w="162"/><text x="97.7274%" y="270.50"></text></g><g><title>_publish (wandb\sdk\interface\interface_sock.py:51) (156 samples, 0.16%)</title><rect x="97.4835%" y="276" width="0.1580%" height="15" fill="rgb(251,196,23)" fg:x="96225" fg:w="156"/><text x="97.7335%" y="286.50"></text></g><g><title>send_record_publish (wandb\sdk\lib\sock_client.py:221) (145 samples, 0.15%)</title><rect x="97.4947%" y="292" width="0.1469%" height="15" fill="rgb(250,152,24)" fg:x="96236" fg:w="145"/><text x="97.7447%" y="302.50"></text></g><g><title>send_server_request (wandb\sdk\lib\sock_client.py:155) (144 samples, 0.15%)</title><rect x="97.4957%" y="308" width="0.1459%" height="15" fill="rgb(209,150,17)" fg:x="96237" fg:w="144"/><text x="97.7457%" y="318.50"></text></g><g><title>_send_message (wandb\sdk\lib\sock_client.py:152) (131 samples, 0.13%)</title><rect x="97.5088%" y="324" width="0.1327%" height="15" fill="rgb(234,202,34)" fg:x="96250" fg:w="131"/><text x="97.7588%" y="334.50"></text></g><g><title>refresh (rich\live.py:239) (346 samples, 0.35%)</title><rect x="97.3265%" y="116" width="0.3505%" height="15" fill="rgb(253,148,53)" fg:x="96070" fg:w="346"/><text x="97.5765%" y="126.50"></text></g><g><title>__exit__ (rich\console.py:848) (339 samples, 0.34%)</title><rect x="97.3336%" y="132" width="0.3434%" height="15" fill="rgb(218,129,16)" fg:x="96077" fg:w="339"/><text x="97.5836%" y="142.50"></text></g><g><title>_exit_buffer (rich\console.py:806) (338 samples, 0.34%)</title><rect x="97.3346%" y="148" width="0.3424%" height="15" fill="rgb(216,85,19)" fg:x="96078" fg:w="338"/><text x="97.5846%" y="158.50"></text></g><g><title>__rich_measure__ (rich\padding.py:132) (136 samples, 0.14%)</title><rect x="97.9678%" y="324" width="0.1378%" height="15" fill="rgb(235,228,7)" fg:x="96703" fg:w="136"/><text x="98.2178%" y="334.50"></text></g><g><title>get (rich\measure.py:109) (155 samples, 0.16%)</title><rect x="97.9657%" y="308" width="0.1570%" height="15" fill="rgb(245,175,0)" fg:x="96701" fg:w="155"/><text x="98.2157%" y="318.50"></text></g><g><title>_measure_column (rich\table.py:723) (203 samples, 0.21%)</title><rect x="97.9445%" y="292" width="0.2057%" height="15" fill="rgb(208,168,36)" fg:x="96680" fg:w="203"/><text x="98.1945%" y="302.50"></text></g><g><title>_calculate_column_widths (rich\table.py:519) (325 samples, 0.33%)</title><rect x="97.8442%" y="260" width="0.3293%" height="15" fill="rgb(246,171,24)" fg:x="96581" fg:w="325"/><text x="98.0942%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (rich\table.py:520) (324 samples, 0.33%)</title><rect x="97.8452%" y="276" width="0.3282%" height="15" fill="rgb(215,142,24)" fg:x="96582" fg:w="324"/><text x="98.0952%" y="286.50"></text></g><g><title>__rich_measure__ (rich\padding.py:132) (148 samples, 0.15%)</title><rect x="98.3396%" y="324" width="0.1499%" height="15" fill="rgb(250,187,7)" fg:x="97070" fg:w="148"/><text x="98.5896%" y="334.50"></text></g><g><title>get (rich\measure.py:109) (161 samples, 0.16%)</title><rect x="98.3365%" y="308" width="0.1631%" height="15" fill="rgb(228,66,33)" fg:x="97067" fg:w="161"/><text x="98.5865%" y="318.50"></text></g><g><title>_measure_column (rich\table.py:723) (218 samples, 0.22%)</title><rect x="98.3071%" y="292" width="0.2209%" height="15" fill="rgb(234,215,21)" fg:x="97038" fg:w="218"/><text x="98.5571%" y="302.50"></text></g><g><title>_calculate_column_widths (rich\table.py:558) (344 samples, 0.35%)</title><rect x="98.2058%" y="260" width="0.3485%" height="15" fill="rgb(222,191,20)" fg:x="96938" fg:w="344"/><text x="98.4558%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (rich\table.py:559) (344 samples, 0.35%)</title><rect x="98.2058%" y="276" width="0.3485%" height="15" fill="rgb(245,79,54)" fg:x="96938" fg:w="344"/><text x="98.4558%" y="286.50"></text></g><g><title>__rich_console__ (rich\table.py:478) (704 samples, 0.71%)</title><rect x="97.8432%" y="244" width="0.7132%" height="15" fill="rgb(240,10,37)" fg:x="96580" fg:w="704"/><text x="98.0932%" y="254.50"></text></g><g><title>__rich_console__ (rich\text.py:633) (174 samples, 0.18%)</title><rect x="98.9879%" y="388" width="0.1763%" height="15" fill="rgb(214,192,32)" fg:x="97710" fg:w="174"/><text x="99.2379%" y="398.50"></text></g><g><title>render (rich\console.py:1305) (381 samples, 0.39%)</title><rect x="98.9687%" y="372" width="0.3860%" height="15" fill="rgb(209,36,54)" fg:x="97691" fg:w="381"/><text x="99.2187%" y="382.50"></text></g><g><title>__rich_console__ (rich\text.py:642) (100 samples, 0.10%)</title><rect x="99.2534%" y="388" width="0.1013%" height="15" fill="rgb(220,10,11)" fg:x="97972" fg:w="100"/><text x="99.5034%" y="398.50"></text></g><g><title>split_and_crop_lines (rich\segment.py:292) (483 samples, 0.49%)</title><rect x="98.8694%" y="356" width="0.4893%" height="15" fill="rgb(221,106,17)" fg:x="97593" fg:w="483"/><text x="99.1194%" y="366.50"></text></g><g><title>render_lines (rich\console.py:1345) (522 samples, 0.53%)</title><rect x="98.8583%" y="340" width="0.5288%" height="15" fill="rgb(251,142,44)" fg:x="97582" fg:w="522"/><text x="99.1083%" y="350.50"></text></g><g><title>render (rich\console.py:1305) (591 samples, 0.60%)</title><rect x="98.7904%" y="308" width="0.5987%" height="15" fill="rgb(238,13,15)" fg:x="97515" fg:w="591"/><text x="99.0404%" y="318.50"></text></g><g><title>__rich_console__ (rich\padding.py:97) (537 samples, 0.54%)</title><rect x="98.8451%" y="324" width="0.5440%" height="15" fill="rgb(208,107,27)" fg:x="97569" fg:w="537"/><text x="99.0951%" y="334.50"></text></g><g><title>split_and_crop_lines (rich\segment.py:292) (628 samples, 0.64%)</title><rect x="98.7549%" y="292" width="0.6362%" height="15" fill="rgb(205,136,37)" fg:x="97480" fg:w="628"/><text x="99.0049%" y="302.50"></text></g><g><title>render_lines (rich\console.py:1345) (677 samples, 0.69%)</title><rect x="98.7377%" y="276" width="0.6859%" height="15" fill="rgb(250,205,27)" fg:x="97463" fg:w="677"/><text x="98.9877%" y="286.50"></text></g><g><title>_render (rich\table.py:823) (690 samples, 0.70%)</title><rect x="98.7266%" y="260" width="0.6990%" height="15" fill="rgb(210,80,43)" fg:x="97452" fg:w="690"/><text x="98.9766%" y="270.50"></text></g><g><title>render (rich\console.py:1305) (1,611 samples, 1.63%)</title><rect x="97.8421%" y="228" width="1.6321%" height="15" fill="rgb(247,160,36)" fg:x="96579" fg:w="1611"/><text x="98.0921%" y="238.50"></text></g><g><title>__rich_console__ (rich\table.py:505) (899 samples, 0.91%)</title><rect x="98.5635%" y="244" width="0.9108%" height="15" fill="rgb(234,13,49)" fg:x="97291" fg:w="899"/><text x="98.8135%" y="254.50"></text></g><g><title>split_and_crop_lines (rich\segment.py:292) (1,618 samples, 1.64%)</title><rect x="97.8361%" y="196" width="1.6392%" height="15" fill="rgb(234,122,0)" fg:x="96573" fg:w="1618"/><text x="98.0861%" y="206.50"></text></g><g><title>render (rich\console.py:1309) (1,617 samples, 1.64%)</title><rect x="97.8371%" y="212" width="1.6381%" height="15" fill="rgb(207,146,38)" fg:x="96574" fg:w="1617"/><text x="98.0871%" y="222.50"></text></g><g><title>render_lines (rich\console.py:1345) (1,633 samples, 1.65%)</title><rect x="97.8361%" y="180" width="1.6544%" height="15" fill="rgb(207,177,25)" fg:x="96573" fg:w="1633"/><text x="98.0861%" y="190.50"></text></g><g><title>__rich_console__ (rich\live_render.py:88) (1,636 samples, 1.66%)</title><rect x="97.8340%" y="164" width="1.6574%" height="15" fill="rgb(211,178,42)" fg:x="96571" fg:w="1636"/><text x="98.0840%" y="174.50"></text></g><g><title>print (rich\console.py:1673) (1,662 samples, 1.68%)</title><rect x="97.8188%" y="132" width="1.6837%" height="15" fill="rgb(230,69,54)" fg:x="96556" fg:w="1662"/><text x="98.0688%" y="142.50"></text></g><g><title>render (rich\console.py:1305) (1,652 samples, 1.67%)</title><rect x="97.8290%" y="148" width="1.6736%" height="15" fill="rgb(214,135,41)" fg:x="96566" fg:w="1652"/><text x="98.0790%" y="158.50"></text></g><g><title>run (rich\live.py:32) (4,197 samples, 4.25%)</title><rect x="95.3074%" y="100" width="4.2519%" height="15" fill="rgb(237,67,25)" fg:x="94077" fg:w="4197"/><text x="95.5574%" y="110.50">run (..</text></g><g><title>refresh (rich\live.py:240) (1,858 samples, 1.88%)</title><rect x="97.6770%" y="116" width="1.8823%" height="15" fill="rgb(222,189,50)" fg:x="96416" fg:w="1858"/><text x="97.9270%" y="126.50">r..</text></g><g><title>crc_update (tensorboard\compat\tensorflow_stub\pywrap_tensorflow.py:140) (110 samples, 0.11%)</title><rect x="99.5715%" y="180" width="0.1114%" height="15" fill="rgb(245,148,34)" fg:x="98286" fg:w="110"/><text x="99.8215%" y="190.50"></text></g><g><title>write (tensorboard\summary\writer\record_writer.py:39) (294 samples, 0.30%)</title><rect x="99.5603%" y="132" width="0.2978%" height="15" fill="rgb(222,29,6)" fg:x="98275" fg:w="294"/><text x="99.8103%" y="142.50"></text></g><g><title>masked_crc32c (tensorboard\compat\tensorflow_stub\pywrap_tensorflow.py:40) (294 samples, 0.30%)</title><rect x="99.5603%" y="148" width="0.2978%" height="15" fill="rgb(221,189,43)" fg:x="98275" fg:w="294"/><text x="99.8103%" y="158.50"></text></g><g><title>crc32c (tensorboard\compat\tensorflow_stub\pywrap_tensorflow.py:165) (294 samples, 0.30%)</title><rect x="99.5603%" y="164" width="0.2978%" height="15" fill="rgb(207,36,27)" fg:x="98275" fg:w="294"/><text x="99.8103%" y="174.50"></text></g><g><title>crc_update (tensorboard\compat\tensorflow_stub\pywrap_tensorflow.py:141) (173 samples, 0.18%)</title><rect x="99.6829%" y="180" width="0.1753%" height="15" fill="rgb(217,90,24)" fg:x="98396" fg:w="173"/><text x="99.9329%" y="190.50"></text></g><g><title>_run (tensorboard\summary\writer\event_file_writer.py:275) (327 samples, 0.33%)</title><rect x="99.5593%" y="116" width="0.3313%" height="15" fill="rgb(224,66,35)" fg:x="98274" fg:w="327"/><text x="99.8093%" y="126.50"></text></g><g><title>run (tensorboard\summary\writer\event_file_writer.py:244) (328 samples, 0.33%)</title><rect x="99.5593%" y="100" width="0.3323%" height="15" fill="rgb(221,13,50)" fg:x="98274" fg:w="328"/><text x="99.8093%" y="110.50"></text></g><g><title>_bootstrap (threading.py:973) (4,631 samples, 4.69%)</title><rect x="95.2942%" y="68" width="4.6916%" height="15" fill="rgb(236,68,49)" fg:x="94064" fg:w="4631"/><text x="95.5442%" y="78.50">_boot..</text></g><g><title>_bootstrap_inner (threading.py:1016) (4,631 samples, 4.69%)</title><rect x="95.2942%" y="84" width="4.6916%" height="15" fill="rgb(229,146,28)" fg:x="94064" fg:w="4631"/><text x="95.5442%" y="94.50">_boot..</text></g><g><title>all (98,709 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(225,31,38)" fg:x="0" fg:w="98709"/><text x="0.2500%" y="62.50"></text></g></svg></svg>